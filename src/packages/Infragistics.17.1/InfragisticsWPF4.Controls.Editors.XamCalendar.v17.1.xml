<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Editors.XamCalendar.v17.1</name>
    </assembly>
    <members>
        <member name="M:Infragistics.Controls.Primitives.TimeManager.AddTask(System.DateTime,System.Action)">
            <summary>
            Invokes a specified action when the current time hits or exceeds the specified time.
            </summary>
            <param name="time">The time at which the action should be invoked</param>
            <param name="action">The action to invoke</param>
            <returns>A token that must be strongly referenced by the caller.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.TimeManager.AddTimeRange(Infragistics.DateRange,System.Boolean,System.Action)">
            <summary>
            Adds a notification that is triggered when the current time enters/leaves the specified range
            </summary>
            <param name="timeRange">The time range to watch</param>
            <param name="isEnterAction">True to invoke the action when the current time enters the <paramref name="timeRange"/>; false to invoke the action when the current time leaves the range.</param>
            <param name="action">The action to invoke when the time enters/leaves the specified range.</param>
            <returns>A token that must be strongly referenced by the caller.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.TimeManager.Remove(System.Object)">
            <summary>
            Removes the specified time item.
            </summary>
            <param name="token">The object that was returned from the add method used to add the time item</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.TimeManager.SnoozeTask(System.Object,System.DateTime)">
            <summary>
            Increases the time before a task's action is to be invoked
            </summary>
            <param name="item">The token for the task returned from the AddTask method</param>
            <param name="newTime">A time in the future from the current task time that the associated action should be invoked.</param>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ISelectableItem">
            <summary>
            ISelectableItem is implemented by any sub object that can
            be selected and/or activated
            (e.g. a cell, row, header etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ISelectableItem.IsSelected">
            <summary>
            True if the item is currently selected (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ISelectableItem.IsSelectable">
            <summary>
            True if the item is selectable (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ISelectableItem.IsDraggable">
            <summary>
            True if the item is Draggable (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ISelectableItem.IsTabStop">
            <summary>
            True if this item is a tab stop
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionController">
            <summary>
            Class used to route mouse messages to an appropriate <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionController.CancelPendingOperations">
            <summary>
            Called to cancel any pending mouse operations
            </summary>
            <returns>Returns true if successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionController.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionController.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionController.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="E:Infragistics.Controls.Primitives.SelectionController.ActiveStrategyChanged">
            <summary>
            Raised when the <see cref="P:Infragistics.Controls.Primitives.SelectionController.ActiveStrategy"/> has been changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ISelectionHost">
            <summary>
            This interface is implemented by controls that want to support selection. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ISelectionHost.RootElement">
            <summary>
            Returns the root element which normally is the control itself (read-only).
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.ActivateItem(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean)">
            <summary>
            Activates the specified item.
            </summary>
            <param name="item">The selectable item</param>
            <param name="preventScrollItemIntoView">If true don't scroll the item into view.</param>
            <returns>Returns true if successful, otherwise false.</returns>
            <seealso cref="T:Infragistics.Controls.Primitives.ISelectableItem"/>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.ClearSnapshot">
            <summary>
            Clears the selection snapshot 
            </summary>
            <seealso cref="M:Infragistics.Controls.Primitives.ISelectionHost.SnapshotSelection(Infragistics.Controls.Primitives.ISelectableItem)"/>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.DeselectItem(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            De-select the specified item.
            </summary>
            <param name="item">The item to de-select.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.DeselectRange(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            De-select the range from the pivot item to the specified item.
            </summary>
            <param name="item">The item to de-select.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.DoAutoScrollHorizontal(Infragistics.Controls.Primitives.ISelectableItem,Infragistics.Controls.Primitives.ScrollDirection,Infragistics.Controls.Primitives.ScrollSpeed)">
            <summary>
            Perform a horizontal autoscroll operation
            </summary>
            <param name="item">The item that triggered the scroll operation</param>
            <param name="direction">The direction to scroll.</param>
            <param name="speed">The scroll speed.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.DoAutoScrollVertical(Infragistics.Controls.Primitives.ISelectableItem,Infragistics.Controls.Primitives.ScrollDirection,Infragistics.Controls.Primitives.ScrollSpeed)">
            <summary>
            Perform a vertical autoscroll operation
            </summary>
            <param name="item">The item that triggered the scroll operation</param>
            <param name="direction">The direction to scroll.</param>
            <param name="speed">The scroll speed.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.EnterSnakingMode(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Used to tell the host to enter snaking mode if appropriate for the item type being selected. 
            </summary>
            <param name="item"></param>
            <remarks>Snaking refers to range selection where the items being selected 
            form a snaking pattern instead of a rectangular pattern. For eample, if in 
            a grid that contained 5 columns the user was selecting a range of cells
            from different rows, the selection could be either rectangular or snake 
            from row to row in which case all cells from intervening rows would get selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.GetAutoScrollInfo(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Gets the potential auto scroll information.
            </summary>
            <param name="item">The selectable item.</param>
            <returns>An <see cref="T:Infragistics.Controls.Primitives.AutoScrollInfo"/> struct that contains information about the possible auto scroll possibilies.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.GetNearestCompatibleItem(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/> compatible with the specified item that
            is nearest to the point identied by the mouse event args.
            </summary>
            <param name="item">The selectable item.</param>
            <param name="e">The mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.GetPivotItem(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/> that is the pivot item based on the type
            of item passed-in.
            </summary>
            <param name="item"></param>
            <returns>The current pivot item or null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.GetSelectionStrategyForItem(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Returns the selection strateg for a specific item.
            </summary>
            <param name="item">The selectable item.</param>
            <returns>The <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> for this item type or null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.IsItemSelectableWithCurrentSelection(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Returns true if the item can be selected without first clearing the current selection.
            </summary>
            <param name="item">The item to select.</param>
            <returns><b>True</b> if the item is selectable with current selection, <b>false</b> otherwise.</returns>
            <seealso cref="T:Infragistics.Controls.Primitives.ISelectableItem"/>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.IsMaxSelectedItemsReached(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Returns true if selecting this item will exceed the maximum allowed.
            </summary>
            <param name="item"><see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/>The selectable item</param>
            <returns>True if the maximum number of items has already been selected.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.OnDragStart(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a dragging operation is about to begin.
            </summary>
            <param name="item">The selectable item</param>
            <param name="e">The mouse event arguments</param>
            <returns>Returning true means that the drag operation started successfully.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.OnDragMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called on a mouse move during a dragging operation
            </summary>
            <param name="e">The mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.OnDragEnd(System.Boolean)">
            <summary>
            Called at the end of a dragging operation
            </summary>
            <param name="canceled"><b>True</b> if the drag was cancelled, <b>false</b> otherwise.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.OnMouseUp(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is released.
            </summary>
            <param name="e">The mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.SelectItem(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean)">
            <summary>
            Select the specified item.
            </summary>
            <param name="item">The item to select.</param>
            <param name="clearExistingSelection">True to clear the current selection.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.SelectRange(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean)">
            <summary>
            Select the range from the pivot item to the specified item.
            </summary>
            <param name="item">The item to select.</param>
            <param name="clearExistingSelection">True to clear the current selection.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.SetPivotItem(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean)">
            <summary>
            Set the specified item as the pivot item. 
            </summary>
            <param name="item"></param>
            <param name="isRangeSelect">True if this is part of a range selection.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.SnapshotSelection(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Snapshots the current selection 
            </summary>
            <param name="item">The item to use to determine the which selection to snapshot.</param>
            <remarks>
            The 'item' parameter is necessary for controls that support selection of multiple item types.
            For example, the DataPresenter supports selection of Records, FieldLabels and Cells.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionHost.TranslateItem(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Potentially translates the passed-in item to an <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/> of a
            different type.  For instance, the DataPresenter translates a passed-in cell 
            into its parent DataRecord if record selection is specified.
            </summary>
            <param name="item">The item to translate</param>
            <returns>The translated item.</returns>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ISelectableElement">
            <summary>
            Interface implemented by elements that represent selectable items (e.g. rows, cells, headers, nodes etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ISelectableElement.SelectableItem">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/> (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ISelectionStrategyFilter">
            <summary>
            Interface implemented by the user of a control to supply
            custom selection strategies.
            </summary>
            <seealso cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ISelectionStrategyFilter.GetSelectionStrategyForItem(Infragistics.Controls.Primitives.ISelectableItem)">
            <summary>
            Called to get the selection strategy for a specific
            item. Returning null means that the control will supply
            its own implementation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollSpeed">
            <summary>
            Determines how fast a slection scroll should be
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Slowest">
            <summary>
            Scroll the slowest
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Slower">
            <summary>
            Scroll slower
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Slow">
            <summary>
            Scroll slowly
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Medium">
            <summary>
            Scroll a moderate amount
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Fast">
            <summary>
            Scroll fast
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Faster">
            <summary>
            Scroll faster
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollSpeed.Fastest">
            <summary>
            Scroll fastest
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollDirection">
            <summary>
            Determines what direction to scroll
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollDirection.Increment">
            <summary>
            Increment the scroll value
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollDirection.Decrement">
            <summary>
            Decrement the scrcoll value
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollOrientation">
            <summary>
            Enumeration used to identify the orientation in which the auto scroll logic should scroll if the 
            mouse is positioned outside the element such that the element can be scroll both horizontally 
            and vertically.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollOrientation.Both">
            <summary>
            The auto scroll logic should scroll both horizontally and vertically.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollOrientation.Horizontal">
            <summary>
            The auto scroll logic should prefer scrolling horizontally regardless of the distance between the mouse and the element bounds.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollOrientation.Vertical">
            <summary>
            The auto scroll logic should prefer scrolling vertically regardless of the distance between the mouse and the element bounds.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollOrientation.BasedOnDistance">
            <summary>
            The auto scroll logic should prefer scrolling in the direction in which the mouse is furthest from the element.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.AutoScrollInfo">
            <summary>
            Struct that returns information used by the auto scroll logic to determine if auto scrolling is possible
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.AutoScrollInfo.#ctor(System.Windows.FrameworkElement,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Primitives.AutoScrollInfo"/> struct
            </summary>
            <param name="scrollArea">The element that defines the scroll bounds</param>
            <param name="canScrollDown">True if a scroll down is possible.</param>
            <param name="canScrollLeft">True if a scroll left is possible.</param>
            <param name="canScrollRight">True if a scroll right is possible.</param>
            <param name="canScrollUp">True if a scroll up is possible.</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.AutoScrollInfo.CanScrollDown">
            <summary>
            Returns true if a scroll down is possible (read-only).  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.AutoScrollInfo.CanScrollLeft">
            <summary>
            Returns true if a scroll left is possible (read-only).  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.AutoScrollInfo.CanScrollRight">
            <summary>
            Returns true if a scroll right is possible (read-only).  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.AutoScrollInfo.CanScrollUp">
            <summary>
            Returns true if a scroll up is possible (read-only).  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.AutoScrollInfo.ScrollArea">
            <summary>
            Returns the element that defines the scroll bounds (read-only). 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.AutoScrollInfo.ScrollOrientation">
            <summary>
            Returns or sets a value that indicates how the direction in which the auto scroll 
            logic should execute when it is possible to scroll both horizontally and vertically.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyBase">
            <summary>
            Abstract base class for selection strategies
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> class
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState">
            <summary>
            The potential selection states of the strategy.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState.SingleSelect">
            <summary>
            Currently in single selection state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState.PreDrag">
            <summary>
            Currently in pre-drag state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState.PreEdit">
            <summary>
            Currently in pre-edit state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState.PotentialPreDrag">
            <summary>
            Currently in potential pre-drag state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState.ExtSelect">
            <summary>
            Currently in extSelect state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionState.ControlClick">
            <summary>
            Currently in ControlClick state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.IsMultiSelect">
            <summary>
            True if this strategy supports selecting more than one 
            item at a time (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.IsSingleSelect">
            <summary>
            True if this strategy supports selecting only one 
            item at a time (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.IsReleasingMouseCapture">
            <summary>
            True while the mouse capture is being toggled off (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollHorizontalIntervalMax">
            <summary>
            Returns the number of milliseconds between consecutive horizontal auto scrolls when
            auto scrolling at the slowest rate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollHorizontalIntervalMin">
            <summary>
            Returns the number of milliseconds between consecutive horizontal auto scrolls when
            auto scrolling at the fastest rate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollVerticalIntervalMax">
            <summary>
            Returns the number of milliseconds between consecutive vertical auto scrolls when
            auto scrolling at the slowest rate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollVerticalIntervalMin">
            <summary>
            Returns the number of milliseconds between consecutive vertical auto scrolls when
            auto scrolling at the fastest rate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.CurrentSelectableItem">
            <summary>
            Returns/sets the current selectable item for the strategy.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.CurrentSelectionState">
            <summary>
            Returns/sets the current state of the selection for the strategy.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.DragThreshold">
            <summary>
            Returns a value which represents the amount that the mouse must move from the inital MouseDown
            position before dragging will start.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.IgnoreNextMouseMove">
            <summary>
            Returns/sets whether the next mouse move should be ignored.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.InDragMode">
            <summary>
            Returns/sets whether the strategy is currently in drag mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.InitialXPos">
            <summary>
            Returns/sets the X coordinate of the mouse when the initial MouseDown was received.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.InitialYPos">
            <summary>
            Returns/sets the Y coordinate of the mouse when the initial MouseDown was received.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.IsCtrlKeyPressed">
            <summary>
            Returns true if the CTRK key is currently pressed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.IsShiftKeyPressed">
            <summary>
            Returns true if the shift key is currently pressed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.PixelThresholdForHorizontalAutoScroll">
            <summary>
            Returns the number of pixels inside the left or right edge of the ScrollArea within which
            auto scrolling will take place
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.PixelThresholdForVerticalAutoScroll">
            <summary>
            Returns the number of pixels inside the top or bottom edge of the ScrollArea within which
            auto scrolling will take place
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionHost">
            <summary>
            Returns the SelectionHost (usually the control) for the strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.CancelPendingOperations">
            <summary>
            Called to cancel any pending mouse drag operation
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.CanItemBeNavigatedTo(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean,System.Boolean)">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/> can be navigated to.
            </summary>
            <param name="item">The selectable item</param>
            <param name="shiftKeyDown"><b>true</b> if shift key is depressed.</param>
            <param name="controlKeyDown"><b>true</b> if Ctrl key is depressed.</param>
            <returns>True if the itme can be navigated to.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.GetSelectionStrategy(Infragistics.Controls.Primitives.SelectionType,Infragistics.Controls.Primitives.ISelectionHost,Infragistics.Controls.Primitives.SelectionStrategyBase)">
            <summary>
            Returns one of the built in <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> derived classes based on the specified <see cref="T:Infragistics.Controls.Primitives.SelectionType"/>
            </summary>
            <param name="type">An enum indicating the type of selection strategy that should be returned.</param>
            <param name="host">The <see cref="T:Infragistics.Controls.Primitives.ISelectionHost"/> for which the selection strategy is being created</param>
            <param name="oldStrategy">The previous strategy that was used by the host or null if the host was not associated with a selection strategy</param>
            <returns>If the <paramref name="oldStrategy"/> is of the appropriate type and its <see cref="P:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectionHost"/> is <paramref name="host"/>, that instance will be returned. Otherwise, a new <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> derived class will be created based on the <paramref name="type"/> and using the specified <paramref name="host"/> as its <b>SelectionHost</b>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is a null reference (<b>Nothing</b> in Visual Basic)</exception>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.IsMultiSelectStrategy(Infragistics.Controls.Primitives.SelectionType)">
            <summary>
            Returns a boolean indicating if the default <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> for a given <see cref="T:Infragistics.Controls.Primitives.SelectionType"/> allows multiple selection.
            </summary>
            <param name="selectionType">The selection type to evaluate</param>
            <returns>True for selection types such as <b>Extended</b> and <b>Range</b>; false for types such as <b>Single</b> and <b>None</b>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.IsSingleSelectStrategy(Infragistics.Controls.Primitives.SelectionType)">
            <summary>
            Returns a boolean indicating if the default <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> for a given <see cref="T:Infragistics.Controls.Primitives.SelectionType"/> is used to perform single item selection.
            </summary>
            <param name="selectionType">The selection type to evaluate</param>
            <returns>True for selection types such as <b>Single</b>; false for types such as <b>Extended</b> and <b>None</b>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.OnMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse down is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning true on a mouse down message will cause the mouse to be captured</returns>
            <remarks>
            Note: The <see cref="M:Infragistics.Controls.Primitives.SelectionStrategyBase.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> and <see cref="M:Infragistics.Controls.Primitives.SelectionStrategyBase.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> 
            methods are called only if this method returns true and thereby captured the mouse.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse move message is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning false on a mouse down message will cause the mouse to be released.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse up is received while the mouse is captured. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.SelectItemViaKeyboard(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called to select an item as a result of a key press
            </summary>
            <param name="item">The item to select</param>
            <param name="shiftKeyDown">True if the shift key is pressed</param>
            <param name="controlKeyDown">True if the control key is pressed.</param>
            <param name="forceToggle">Toggle the existing selection.</param>
            <returns>True is successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.DragMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Used to verify the drag timers and call the <see cref="M:Infragistics.Controls.Primitives.ISelectionHost.OnDragMove(System.Windows.Input.MouseEventArgs)"/> 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.DragStart(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when dragging is to be started.
            It calls OnDragStart off the SelectionManager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.GetMousePointInRootElementCoordinates(System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns a point in RootElement coordinates that corresponds to the mouse position contained in mouseEventArgs.
            </summary>
            <param name="mouseEventArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.ManageTimers(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines during a drag operation whether timers
            are required to generate horizontal or vertical scrolling.
            </summary>
            <param name="mouseEventArgs">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.OnDragStartCanceled">
            <summary>
            This method is called when the selection manager cancels OnDragStart. Default implementation releases the capture.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.ShouldStartDrag(System.Double,System.Double)">
            <summary>
            Returns true if dragging should start (when we're in preDrag mode).
            The default implementation checks to see if the x or y coords exceed
            the drag threshold.
            </summary>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <returns><b>True</b> if should start drag, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.StopHorizontalAutoScrollTimer">
            <summary>
            Stops the timer used for horizontal auto scrolling.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.StopVerticalAutoScrollTimer">
            <summary>
            Stops the timer used for vertical auto scrolling.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager">
            <summary>
            Class that calcualtes and manages info about autoscrolling.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager.#ctor(Infragistics.Controls.Primitives.SelectionStrategyBase,Infragistics.Controls.Primitives.AutoScrollInfo,System.Windows.Input.MouseEventArgs,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager"/> class
            </summary>
            <param name="selectionStrategy">The associated selection strategy</param>
            <param name="autoScrollInfo">Provides information about what type of scrolling is possible</param>
            <param name="mouseEventArgs">The associated mouse event arguments from the mouse event for which the <b>AutoScrollManager</b> is being created</param>
            <param name="directionIsVertical">True if the manager will be dealing with vertical scrolling; otherwise false for horizontal scrolling.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager.GetScrollSpeedFromTimerInterval(System.Double)">
            <summary>
            Returns a ScrollSpeed enum value based on the supplied timer interval and the min and max timer intervals.
            </summary>
            <param name="timerInterval"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager.IsScrollingRequired">
            <summary>
            Returns true if scrolling is required.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager.ScrollDirection">
            <summary>
            Returns the direction for the AutoScroll.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager.ScrollSpeed">
            <summary>
            Returns the speed of the AutoScroll
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyBase.AutoScrollManager.TimerInterval">
            <summary>
            Returns the interval to use for the AutoScroll timer (in milliseconds).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategySingle">
            <summary>
            Selection strategy for selecting one item at a time.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Primitives.SelectionStrategySingle"/> class
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategySingle.IsSingleSelect">
            <summary>
            True if this strategy supports selecting only one 
            item at a time (read-only).
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.OnMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse down is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning true on a mouse down message will cause the mouse to be captured</returns>
            <remarks>
            Note: The <see cref="M:Infragistics.Controls.Primitives.SelectionStrategySingle.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> and <see cref="M:Infragistics.Controls.Primitives.SelectionStrategySingle.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> 
            methods are called only if this method returns true and thereby captured the mouse.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse move message is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning false on a mouse down message will cause the mouse to be released.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse up is received while the mouse is captured. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.SelectItemViaKeyboard(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called to select an item as a result of a key press
            </summary>
            <param name="item">The item to select</param>
            <param name="shiftKeyDown">True if the shift key is pressed</param>
            <param name="controlKeyDown">True if the control key is pressed.</param>
            <param name="forceToggle">Toggle the existing selection.</param>
            <returns>True is successful.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.ProcessMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs,System.Boolean)">
            <summary>
            OnMouseDown handler that takes a third parameter that specifies whether
            we are forcing a drag or not.  SelectionStrategySingleAutoDrag passes
            true to this.
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null) <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/></param>
            <param name="e">The mouse event args</param>
            <param name="forceDrag"><b>true</b> if a drag should be forced</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingle.SelectItemAtPoint(System.Windows.Input.MouseEventArgs)">
            <summary>
            Selects the item at or nearest the mouse location
            </summary>
            <param name="mouseEventArgs">The MouseEventArgs from the most recent mouse event</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategySingle.ShouldSelectOnDrag">
            <summary>
            Returns whether selection should be modified when the cursor passes over
            a different item than the selected one. The default implementation returns true.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyNone">
            <summary>
            Selection strategy for preventing selection of items in the associated selection host.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyNone.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyNone"/> class
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyNone.OnMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse down is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning true on a mouse down message will cause the mouse to be captured</returns>
            <remarks>
            Note: The <see cref="M:Infragistics.Controls.Primitives.SelectionStrategyNone.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> and <see cref="M:Infragistics.Controls.Primitives.SelectionStrategyNone.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> 
            methods are called only if this method returns true and thereby captured the mouse.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyNone.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse move message is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning false on a mouse down message will cause the mouse to be released.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyNone.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse up is received while the mouse is captured. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyNone.SelectItemViaKeyboard(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called to select an item as a result of a key press
            </summary>
            <param name="item">The item to select</param>
            <param name="shiftKeyDown">True if the shift key is pressed</param>
            <param name="controlKeyDown">True if the control key is pressed.</param>
            <param name="forceToggle">Toggle the existing selection.</param>
            <returns>True is successful.</returns>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyExtended">
            <summary>
            Selection strategy used for selecting multiple items. The selection does not have to be contiguous.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyExtended"/> class
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyExtended.IsMultiSelect">
            <summary>
            Returns true if only a single item can be selected 
            at any given time 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyExtended.IsDiscontiguousAllowed">
            <summary>
            Returns true if discontinuous selection is allowed 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.CanItemBeNavigatedTo(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean,System.Boolean)">
            <summary>
            Returns true if item can be selected.
            </summary>
            <param name="item"><see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/>Selected item</param>
            <param name="shiftKeyDown"><b>true</b> if shift key is down</param>
            <param name="controlKeyDown"><b>true</b> if shift key is down</param>
            <returns><b>true</b> if item can be selected</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.OnDragStartCanceled">
            <summary>
            This method is called when the selection manager cancels OnDragStart. The default implementation
            releases the capture.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.OnMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse down is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning true on a mouse down message will cause the mouse to be captured</returns>
            <remarks>
            Note: The <see cref="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> and <see cref="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)"/> 
            methods are called only if this method returns true and thereby captured the mouse.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.OnMouseMove(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse move message is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning false on a mouse down message will cause the mouse to be released.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.OnMouseLeftButtonUp(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse up is received while the mouse is captured. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.SelectItemViaKeyboard(Infragistics.Controls.Primitives.ISelectableItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called to select an item as a result of a key press
            </summary>
            <param name="item">The item to select</param>
            <param name="shiftKeyDown">True if the shift key is pressed</param>
            <param name="controlKeyDown">True if the control key is pressed.</param>
            <param name="forceToggle">Toggle the existing selection.</param>
            <returns>True is successful.</returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyExtended.DragDelayTimerInterval">
            <summary>
            Returns the interval for the drag delay timer in milliseconds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyExtended.ShouldSelect">
            <summary>
            Returns true if the strategy should select, or false if it should unselect.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.ProcessMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs,System.Boolean)">
            <summary>
            OnMouseDown handler that takes a third parameter that specifies whether
            we are forcing a drag or not.  SelectionStrategySingleAutoDrag passes
            true to this.
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null) <see cref="T:Infragistics.Controls.Primitives.ISelectableItem"/></param>
            <param name="e">The mouse event args</param>
            <param name="forceDrag"><b>true</b> if a drag should be forced</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.StartDragDelayTimer">
            <summary>
            Starts the timer used to ensure a delay period before dragging starts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtended.StopDragDelayTimer">
            <summary>
            Stops the timer used to ensure a delay period before dragging starts.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyContiguous">
            <summary>
            Selection strategy used for selecting multiple items where the selection should not be contiguous.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyContiguous.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyContiguous"/>
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategyContiguous.IsDiscontiguousAllowed">
            <summary>
            Returns true if discontinuous selection is allowed 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategyExtendedAutoDrag">
            <summary>
            Selection strategy for selecting multiple items that can initiate a drag on the mouse down.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtendedAutoDrag.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyExtendedAutoDrag"/>
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategyExtendedAutoDrag.OnMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse down is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning true on a mouse down message will cause the mouse to be captured</returns>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionStrategySingleAutoDrag">
            <summary>
            Selection strategy for selecting a single item that can initiate a drag on the mouse down.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingleAutoDrag.#ctor(Infragistics.Controls.Primitives.ISelectionHost)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.SelectionStrategySingleAutoDrag"/>
            </summary>
            <param name="selectionHost">The selection host for which the selection strategy will interact</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.SelectionStrategySingleAutoDrag.OnMouseLeftButtonDown(Infragistics.Controls.Primitives.ISelectableItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a left mouse down is received. 
            </summary>
            <param name="item">The selectable item that the mouse is over (may be null)</param>
            <param name="e">The mouse event args</param>
            <returns>Returning true on a mouse down message will cause the mouse to be captured</returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.SelectionStrategySingleAutoDrag.ShouldSelectOnDrag">
            <summary>
            Returns whether selection should be modified when the cursor passes over
            a different item than the selected one.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.SelectionType">
            <summary>
            Used to specify the type of selection that is allowed for an object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.None">
            <summary>
            None. Objects may not be selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.Single">
            <summary>
            Single Select. Only one object may be selected at any time.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.Extended">
            <summary>
            Extended Select. Multiple objects may be selected at once.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.Range">
            <summary>
            A single range that could include multiple objects may be selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.ExtendedAutoDrag">
            <summary>
            Strategy used when multiple items can be selected but pressing the left
            button and dragging does not select other items but instead starts dragging
            the selected item immediately. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.SelectionType.SingleAutoDrag">
            <summary>
            Strategy used when only a single item can be selected and pressing the left
            button and dragging does not select other items but instead starts dragging
            the selected item immediately.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarDateRangeCollection">
            <summary>
            A collection of <see cref="T:Infragistics.DateRange"/> instances.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDateRangeCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the collection has been changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDateRangeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked when a property of the collection has been changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarDay">
            <summary>
            Represents a specific date in a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="body">A CalendarDay is a custom <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> that represents a 
            single DateTime. The <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate"/> 
            values will be the same. This element is only used when the <see cref="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.GetCurrentMode(System.Windows.DependencyObject)"/> 
            is <b>Days</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDay.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarDay.IsWorkdayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDay.IsWorkday"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDay.IsWorkday">
            <summary>
            Returns a boolean indicating whether the day is considered a work day as set in the <see cref="P:Infragistics.Controls.Editors.XamCalendar.Workdays"/>
            </summary>
            <remarks>
            <p class="body">The IsWorkday is initialized based on the <see cref="P:Infragistics.Controls.Editors.XamCalendar.Workdays"/> of the containing 
            <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> and is intended to allow custom styling of days that represent working or non-working days 
            such as weekends.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarDay.IsWorkdayProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.Workdays"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDay.ToString">
            <summary>
            Overriden. Returns the date that the item represents
            </summary>
            <returns>A string including the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDay.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek">
            <summary>
            Represents a specific <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DayOfWeek"/> in the header area of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedBackground">
            <summary>
            Returns the brush to use for the background based on the element's state.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedBackgroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.ComputedForegroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DayOfWeekProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DayOfWeek"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DayOfWeek">
            <summary>
            Returns an enumeration for this day of week (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DayOfWeekProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DisplayTextProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DisplayText"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DisplayText">
            <summary>
            Returns the string to display for this day of week (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.DisplayTextProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeekPanel">
            <summary>
            A specialized panel that that arranges <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeek"/> elements for a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/> 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeekPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDayOfWeekPanel"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions">
            <summary>
            Structure used to indicate the preferred rows/columns of <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances within a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/>
            </summary>
            <param name="rows">The number of rows</param>
            <param name="columns">The number of columns</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The rows and columns must be 0 or greater.</exception>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.GetHashCode">
            <summary>
            Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.Equals(System.Object)">
            <summary>
            Compares the specified object to this object to see if they are equivalent.
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the objects are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.op_Equality(Infragistics.Controls.Editors.Primitives.CalendarDimensions,Infragistics.Controls.Editors.Primitives.CalendarDimensions)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/> structures for equality
            </summary>
            <param name="item1">The first structure</param>
            <param name="item2">The other structure</param>
            <returns>true if the two instances are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.op_Inequality(Infragistics.Controls.Editors.Primitives.CalendarDimensions,Infragistics.Controls.Editors.Primitives.CalendarDimensions)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/> structures for inequality
            </summary>
            <param name="item1">The first structure</param>
            <param name="item2">The other structure</param>
            <returns>true if the two instances are not equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>A string that represents this <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDimensions.Columns">
            <summary>
            Returns or sets the number of columns of groups.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be 0 or greater.</exception>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarDimensions.Rows">
            <summary>
            Returns or sets the number of rows of groups.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be 0 or greater.</exception>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensions.Equals(Infragistics.Controls.Editors.Primitives.CalendarDimensions)">
            <summary>
            Compares two <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/>
            </summary>
            <param name="other">The object to compare to this instance</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter">
            <summary>
            Type converter for the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/> structure
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert from the type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType"> A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType"> A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from one type to another.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>        
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarDimensionsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarItem">
            <summary>
            Represents an item within the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="body">A <b>CalendarItem</b> will represent either a day within a month, a month 
            within a year, a year within a decade or a decade within a century. CalendarItems are dynamically 
            generated by a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/> based on the range of dates for the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> 
            that contains the item area.</p>
            <p class="body">The control exposes a number of read-only properties that may be used to control the appearance 
            of the item.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBackground">
            <summary>
            Returns the brush to use for the background based on the element's state.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBackgroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBorderBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBorderBrush">
            <summary>
            Returns the brush to use for the BorderBrush based on the element's state
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedBorderBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedForegroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedInnerBorderBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedInnerBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedInnerBorderBrush">
            <summary>
            Returns the brush to use for the InnerBorderBrush based on the element's state
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ComputedInnerBorderBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsSelectedDatesProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsSelectedDates"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsSelectedDates">
            <summary>
            Returns a boolean indicating whether the date contains at least one selected date.
            </summary>
            <remarks>
            <p class="body">When the CalendarItem represents an item in the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>, 
            the value of this property is equal to that of the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelected"/>. This property is primarily 
            intended to allow the control to display some indication to the end user that there are one or more dates within 
            the item that are currently selected when they are in navigation mode.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsSelectedDatesProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelected"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsTodayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsToday"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsToday">
            <summary>
            Returns a boolean indicating if the item contains the current date.
            </summary>
            <remarks>
            <p class="body">When the CalendarItem represents a date in the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>, 
            this property is equivalent to the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsToday"/>. This property is primarily intended to allow providing 
            an indication to the end user during navigation mode, which item contains the calendar item that 
            represents the current date.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsTodayProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDateProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate">
            <summary>
            Returns the ending date for the calendar item.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/> and EndDate indicate the range of dates that the 
            item represents. When the <see cref="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.GetCurrentMode(System.Windows.DependencyObject)"/> is <b>Days</b>, 
            a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> instance will be used and its StartDate and EndDate will be equal.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDateProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsActiveProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsActive"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsActive">
            <summary>
            Returns a boolean indicating if the day represents the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>
            </summary>
            <remarks>
            <p class="body">A CalendarItem is considered active when the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> 
            is within the item's <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate"/>.</p>
            </remarks>
            <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsActiveProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsHighlightedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsHighlighted"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsHighlighted">
            <summary>
            Returns true if this day should be highlighted (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsHighlightedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsLeadingOrTrailingItemProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsLeadingOrTrailingItem"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsLeadingOrTrailingItem">
            <summary>
            Returns a boolean indicating if the CalendarItem is a leading or trailing date in the containing <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="body">Leading and trailing dates are dates displayed within a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> that 
            do not fall within its <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/>. 
            Leading and trailing items are only displayed when the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/> and/or 
            <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/> is true.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsLeadingOrTrailingItemProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelectedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelected">
            <summary>
            Returns a boolean indicating if the date is selected.
            </summary>
            <remarks>
            <p class="body">When the CalendarItem represents an item in the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>, 
            the value of this property is based on whether the date that the item represents has been selected. When in navigation 
            mode, this value is based on whether the item is active since selection can only be modified in the user interface 
            when the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> equals the MinCalendarMode.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelectedProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsSelectedDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.SelectionMode"/>
            <seealso cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelectionActiveProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelectionActive"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelectionActive">
            <summary>
            Returns a boolean indicating indicating whether the containing CalendarBase has keyboard focus.
            </summary>
            <remarks>
            <p class="body">The IsSelectionActive is used to indicate if keyboard focus is within the containing <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>. This 
            is often used to alter the appearance of a selected item when the control does not have keyboard focus (e.g. changing the selection color to 
            gray when focus is outside the control).</p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelected"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.IsSelectionActive"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsTodayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsToday"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsToday">
            <summary>
            Returns a boolean indicating whether the element is an item in the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> and represents the current date.
            </summary>
            <remarks>
            <p class="body">The IsToday property is similar to the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsToday"/> property except that it will 
            only be true when not in navigation mode (i.e. when the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> equals the 
            <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/>). It is used to identify the CalendarItem that represents the 
            current date.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.IsTodayProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.ContainsToday"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDateProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate">
            <summary>
            Returns the starting date for the calendar item.
            </summary>
            <remarks>
            <p class="body">The StartDate and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate"/> indicate the range of dates that the 
            item represents. When the <see cref="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.GetCurrentMode(System.Windows.DependencyObject)"/> is <b>Days</b>, 
            a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> instance will be used and its StartDate and EndDate will be equal.</p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDateProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.OnCreateAutomationPeer">
            <summary>
            Returns <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> Automation Peer Class <see cref="T:Infragistics.AutomationPeers.CalendarItemAutomationPeer"/>
            </summary>
            <returns>AutomationPeer</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsKeyboardFocusWithin property changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved within the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved outside the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItem.ToString">
            <summary>
            Overriden. Returns the date range that the item represents
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.StartDate"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.EndDate"/>.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea">
            <summary>
            A custom element used to display <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances within a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.LogicalChildren">
            <summary>
            Returns an enumerator to iterate the logical children.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemArea.OnApplyTemplate">
            <summary>
            Invoked when the control's template has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemArea.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemArea.OnVisualParentChanged(System.Windows.DependencyObject)">
            <summary>
            Invoked when the visual parent of the element has been changed.
            </summary>
            <param name="oldParent">The previous visual parent</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ComputedItemsBorderThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ComputedItemsBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ComputedItemsBorderThickness">
            <summary>
            Returns the border thickness around the items (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ComputedItemsBorderThicknessProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.DayOfWeekHeaderVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.DayOfWeekHeaderVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.DayOfWeekHeaderVisibility">
            <summary>
            Returns a value indicating the visibility of the day of week headers (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.DayOfWeekHeaderVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.Items">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances that are displayed within the group.
            </summary>
            <remarks>
            <p class="body">The CalendarItem instances are generated based on the containing <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> using its 
            <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/>, <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/>, <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/>,
            <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/>.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemColumnOffsetProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemColumnOffset"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemColumnOffset">
            <summary>
            Returns an integer that represents the number of items between the first date in the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.Items"/> collection and the first column.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemColumnOffsetProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemRowOffset"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemRowOffsetProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemRowOffset"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemRowOffset">
            <summary>
            Returns an integer that represents the number of items between the first date in the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.Items"/> collection and the first row.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemRowOffsetProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.FirstItemColumnOffset"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemColumnsProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemColumns"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemColumns">
            <summary>
            Returns the number of columns that should be displayed in the group.
            </summary>
            <remarks>
            <p class="body">The ItemColumns is calculated based on the 
            <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/> as well as other factors. When the mode 
            is <b>Days</b>, the ItemColumns is based upon the number of visible days of the week which 
            is affected by the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibility"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemColumnsProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemRows"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemRowsProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemRows"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemRows">
            <summary>
            Returns the number of item rows that should be displayed in the group.
            </summary>
            <remarks>
            <p class="body">The ItemRows is calculated based on the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemRowsProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.ItemColumns"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.WeekNumberVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.WeekNumberVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.WeekNumberVisibility">
            <summary>
            Returns a value indicating whether week numbers should be displayed (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemArea.WeekNumberVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.WeekNumberVisibility"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarItemAreaPanel">
            <summary>
            A custom element used to display a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/> within a 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> to perform animations.
            </summary>
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemAreaPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemAreaPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemAreaPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemAreaPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemAreaPanel.OnVisualParentChanged(System.Windows.DependencyObject)">
            <summary>
            Invoked when the visual parent of the element has been changed.
            </summary>
            <param name="oldParent">The previous visual parent</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup">
            <summary>
            Represents a group of calendar items within a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> - e.g. a specific month of the year.
            </summary>
            <remarks>
            <p class="body">A CalendarItemGroup is used to represent a group of <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances. Based 
            on the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/>, the group will contain items that represent either days, months, years, 
            decades or centuries.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.Items">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances that are displayed within the group.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnReferenceDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ReferenceDate property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentModeProperty">
            <summary>
            Identifies the read-only CurrentMode attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.GetCurrentMode(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.GetCurrentMode(System.Windows.DependencyObject)">
            <summary>
            Returns the current <see cref="T:Infragistics.Controls.Editors.CalendarZoomMode"/> for the specified element within the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
            <param name="target">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode">
            <summary>
            Returns the current calendar mode.
            </summary>
            <remarks>
            <p class="body">The CurrentMode is based on the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> 
            but is a readonly inherited property that descendants may use to determine their current mode. Depending on the 
            mode, the group will create <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances that represents days, months, years, decades or 
            centuries.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentModeProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/>
            <seealso cref="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.GetCurrentMode(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroupProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup">
            <summary>
            Returns a <see cref="T:System.Nullable`1"/> that represents the first item of the group. Note, this will not be the first item displayed within the group if the group displays leading dates.
            </summary>
            <remarks>
            <p class="body">The FirstDateOfGroup and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/> identify the range of dates that make up the group. These dates 
            do not include any dates that would represent leading or trailing items. The values are calculated based on the 
            <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/>, <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset"/> and the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/>.</p>
            <p class="note">The property is nullable because it is possible that the group will not be able to 
            display any dates. For example, if the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> 
            were such that you could only see a year, if the <see cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/> was 2,2 so that the control displayed 
            4 groups, not all the groups would be able to display items when you start zooming out.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroupProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsLeadingGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsLeadingGroup"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsLeadingGroup">
            <summary>
            Returns or sets a boolean indicating if the group is considering a leading group.
            </summary>
            <remarks>
            <p class="body">By default when a date is brought into view the CalendarBase will 
            ensure that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/>, and therefore the dates 
            displayed by the groups in the control, is such that the first group contains the 
            <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> or a date after that and the last group contains 
            the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> or a date before that - i.e. it attempts to 
            avoid having groups without items. However there are cases where months should be given 
            less priority and allowed to be empty such as when showing a small preview of the previous 
            and/or next month. When IsLeadingGroup or IsTrailingGroup is set to true, the CalendarBase 
            will ignore these groups when adjusting/calculating the reference date and therefore these 
            groups may be empty.</p>
            <p class="note"><b>Note:</b> This property is always false for groups created by the 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>. It is intended to be used when creating a custom 
            CalendarBase template.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsLeadingGroupProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsTrailingGroup"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsTrailingGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsTrailingGroup"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsTrailingGroup">
            <summary>
            Returns or sets a boolean indicating if the group is considering a leading group.
            </summary>
            <remarks>
            <p class="body">By default when a date is brought into view the CalendarBase will 
            ensure that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/>, and therefore the dates 
            displayed by the groups in the control, is such that the first group contains the 
            <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> or a date after that and the last group contains 
            the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> or a date before that - i.e. it attempts to 
            avoid having groups without items. However there are cases where months should be given 
            less priority and allowed to be empty such as when showing a small preview of the previous 
            and/or next month. When IsLeadingGroup or IsTrailingGroup is set to true, the CalendarBase 
            will ignore these groups when adjusting/calculating the reference date and therefore these 
            groups may be empty.</p>
            <p class="note"><b>Note:</b> This property is always false for groups created by the 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>. It is intended to be used when creating a custom 
            CalendarBase template.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsTrailingGroupProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsLeadingGroup"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroupProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup">
            <summary>
            Returns a <see cref="T:System.Nullable`1"/> that represents the last date of the group. Note, this will not be the last date displayed within the group if the group displays trailing days.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/> and LastDateOfGroup identify the range of dates that make up the group. These dates 
            do not include any dates that would represent leading or trailing items. The values are calculated based on the 
            <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/>, <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset"/> and the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/>.</p>
            <p class="note">The property is nullable because it is possible that the group will not be able to 
            display any dates. For example, if the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> 
            were such that you could only see a year, if the <see cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/> was 2,2 so that the control displayed 
            4 groups, not all the groups would be able to display items when you start zooming out.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroupProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset">
            <summary>
            Returns or sets an integer that is used to calculate the dates displayed within the group based on the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/> of the containing <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>.
            </summary>
            <remarks>
            <p class="body">The ReferenceGroupOffset is used to calculate what range of dates should be displayed by the 
            group. It is used along with the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.CurrentMode"/> 
            when calculating the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/>.</p>
            <p class="body">By default, the template of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> contains a 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> which creates <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances 
            based on the <see cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/>. It initializes this property 
            such that the first displayed group has a ReferenceGroupOffset of 0 and therefore contains the 
            ReferenceDate. All subsequent groups are offset positively by 1 so that they show the next 
            group worth of dates. If you retemplate the CalendarBase to directly contain CalendarItemGroups 
            then you must set this property. For example, you might have 3 groups whose ReferenceGroupOffsets 
            are -1, 0 and 1. When the ReferenceDate is August 1 2008 and the CurrentMode is days, the 
            group with -1 would display the dates for July 2008 and the group with 1 would display the dates 
            for September 2008.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffsetProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates">
            <summary>
            Returns or sets a boolean indicating whether the group should display dates from the previous range of dates.
            </summary>
            <remarks>
            <p class="body">Leading dates are dates prior to the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/> that are displayed within the 
            group. For example, when viewing a gregorian calendar with the default first day of week as Sunday, a group displaying 
            August 2008 would display items for July 28-31.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDatesProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibility">
            <summary>
            Returns or sets the visibility of the button that scrolls its contents to display the next set of dates.
            </summary>
            <remarks>
            <p class="body">By default the template of a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> contains a 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>. This element dynamically generates CalendarItemGroup 
            instances and initializes their ScrollNextButtonVisibility and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibility"/> 
            based on their location within the panel and the state of the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibility"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibility">
            <summary>
            Returns or sets the visibility of the button that scrolls its contents to display the previous set of dates.
            </summary>
            <remarks>
            <p class="body">By default the template of a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> contains a 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>. This element dynamically generates CalendarItemGroup 
            instances and initializes their ScrollPreviousButtonVisibility and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibility"/> 
            based on their location within the panel and the state of the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibility"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates">
            <summary>
            Returns or sets a boolean indicating whether the group should display dates from the next range of dates.
            </summary>
            <p class="body">Trailing dates are dates after to the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/> that are displayed within the 
            group. For example, when viewing a gregorian calendar with the default first day of week as Sunday, a group displaying 
            August 2008 would display items for September 1-6.</p>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDatesProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.TitleProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.Title">
            <summary>
            Returns the title of the group (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.TitleProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnCreateAutomationPeer">
            <summary>
            Returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> that represents the group
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer"/> instance</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsKeyboardFocusWithin property changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved within the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved outside the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ToString">
            <summary>
            Overriden. Returns the date range that the item represents
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.FirstDateOfGroup"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.LastDateOfGroup"/>.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel">
            <summary>
            Custom element used to create and position <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances for a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
            <remarks>
            <p class="body">The CalendarItemGroupPanel is designed to be used within the template of a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>. When 
            used in the CalendarBase template, this class will automatically generate and arrange <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances 
            based on the <see cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/>. When the <see cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/> is 
            true, the panel will generate more CalendarItemGroups if they can fit up to the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/>, which defaults to 12. 
            You may also retemplate the CalendarBase such that it directly contains CalendarItemGroup instances and set their 
            <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset"/>.</p>
            <p class="body">By default, the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidth"/> and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeight"/> properties are set to double.NaN. When either 
            is left set to the default, the panel will calculate the size required for a group to display its contents and arrange all the groups 
            using that size.</p>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.OnChildDesiredSizeChanged(System.Windows.UIElement)">
            <summary>
            Invoked when the desired size of a child has been changed.
            </summary>
            <param name="child">The child whose size is being changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.AutoAdjustDimensionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.AutoAdjustDimensions"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.AutoAdjustDimensions">
            <summary>
            For internal use 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.AutoAdjustDimensionsProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.DimensionsProperty">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.Dimensions">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.HorizontalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.HorizontalContentAlignment">
            <summary>
            Returns or sets the alignment of the items within the element.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.HorizontalContentAlignmentProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.VerticalContentAlignment"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeight"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeight">
            <summary>
            Returns or sets the height of the CalendarItemGroups within the panel.
            </summary>
            <remarks>
            <p class="body">The GroupHeight and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidth"/> are used to control the size 
            of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances that the panel creates. Both of these default 
            to double.NaN. When either is left set to NaN, the panel will use a custom hidden 
            CalendarItemGroup to calculate the size required for the groups to replace the NaN value.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeightProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidth"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidth">
            <summary>
            Returns or sets the width of the CalendarItemGroups within the panel.
            </summary>
            <remarks>
            <p class="body">The GroupWidth and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeight"/> are used to control the size 
            of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances that the panel creates. Both of these default 
            to double.NaN. When either is left set to NaN, the panel will use a custom hidden 
            CalendarItemGroup to calculate the size required for the groups to replace the NaN value.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupWidthProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.GroupHeight"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.LeadingAndTrailingDatesVisibilityProperty">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.LeadingAndTrailingDatesVisibility">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroupsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups">
            <summary>
            Returns or sets the maximum number of groups that the element may generate.
            </summary>
            <remarks>
            <p class="note">The maximum of this value with the rows * columns of the <see cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/> 
            will be used to determine the actual maximum value allowed.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroupsProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.ScrollButtonVisibilityProperty">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.ScrollButtonVisibility">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.VerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.VerticalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.VerticalContentAlignment">
            <summary>
            Returns or sets the vertical alignment of the items within the element.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.VerticalContentAlignmentProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.HorizontalContentAlignment"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle">
            <summary>
            Represents the header for a specific <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> in a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.OnCreateAutomationPeer">
            <summary>
            Returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> that represents the element
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer"/> instance</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved within the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved outside the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedBackground">
            <summary>
            Returns the brush to use for the background based on the element's state.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedBackgroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.ComputedForegroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.GroupProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.Group"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.Group">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.GroupProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarResourceString">
            <summary>
            Class that represents a string resource loaded from the Schedule assembly
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber">
            <summary>
            Represents a specific week number header in the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedBackground">
            <summary>
            Returns the brush to use for the background based on the element's state.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedBackgroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.ComputedForegroundProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.IsSelectedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.IsSelected">
            <summary>
            Returns whether all the days in the week are selected (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.IsSelectedProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarWeekNumberPanel">
            <summary>
            A specialized panel that that arranges <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarWeekNumber"/> elements for a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/> 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarWeekNumberPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarWeekNumberPanel"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarCommand">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> object that will be executed against.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.CalendarCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarCommand"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.CalendarCommandSource.CommandType">
            <summary>
            Gets or sets the CalendarCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.CalendarCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SelectedDateCollection">
            <summary>
            A custom collection of <see cref="T:System.DateTime"/> instances used to represent the selected dates within the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SelectedDateCollection.GetAllowedDates(Infragistics.DateRange)">
            <summary>
            Returns an array of the dates that are allowed to be added for the specified range.
            </summary>
            <param name="dateRange">An object representing the range of dates to add</param>
            <returns>An array of the dates that are allowed to be added.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SelectedDateCollection.OnDatesChanged(System.Collections.Generic.IList{System.DateTime},System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Invoked when the selection has changed indicating the added and removed dates.
            </summary>
            <param name="added">List of dates added</param>
            <param name="removed">List of dates that were removed from the collection</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SelectedDateCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the collection has been changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SelectedDateCollection.VerifyNewDateCount(System.Int32@,System.Boolean)">
            <summary>
            Used to determine if the number of items that will be in the collection is allowed.
            </summary>
            <param name="newItemCount">The new item count. This is passed by reference and when <paramref name="validate"/> is false, this should be updated to reflect the constrained value if it exceeds the maximum</param>
            <param name="validate">True if an exception should be thrown if the new count exceeds the allowed</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarZoomMode">
            <summary>
            Enumeration that determines what is displayed and interacted within each <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> of a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarZoomMode.Days">
            <summary>
            Each <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> is displaying days of the month.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarZoomMode.Months">
            <summary>
            Each <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> is displaying months of the year.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarZoomMode.Years">
            <summary>
            Each <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> is displaying years of a decade.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarZoomMode.Decades">
            <summary>
            Each <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> is displaying ranges of 10 years of a century.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarZoomMode.Centuries">
            <summary>
            Each <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> is displaying ranges of 10 years of a century.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DayOfWeekHeaderFormat">
            <summary>
            Enumeration used to identify the format of the day of week captions in the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DayOfWeekHeaderFormat.SingleCharacter">
            <summary>
            Only a single character is used to identify the days of the week
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DayOfWeekHeaderFormat.TwoCharacters">
            <summary>
            Two characters are used to identify the days of the week
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DayOfWeekHeaderFormat.Abbreviated">
            <summary>
            The abbreviated day of week name from the <see cref="T:System.Globalization.DateTimeFormatInfo"/> is used.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DayOfWeekHeaderFormat.Full">
            <summary>
            The full day of week name from <see cref="T:System.Globalization.DateTimeFormatInfo"/> is used.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarManager.GetDayOfWeekNumber(System.DateTime)">
            <summary>
            Returns the number of the day of the week based on the first day of week.
            </summary>
            <param name="date">The date whose offset is to be calculated</param>
            <returns>A number between 0 and 6 that represents how many days into the week, the specified day represents based on the current first day of week.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarManager.GetDayOfWeekNumber(System.DateTime,System.Boolean)">
            <summary>
            Returns the number of the day of the week based on the first day of week.
            </summary>
            <param name="date">The date whose offset is to be calculated</param>
            <param name="honorDisabledDays">True to account for the hidden days of the week</param>
            <returns>A number between 0 and 6 that represents how many days into the week, the specified day represents based on the current first day of week.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarManager.GetItemColumnCount(Infragistics.Controls.Editors.CalendarZoomMode)">
            <summary>
            Returns the number of item columns regardless of the hidden days of week.
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarManager.GetWeekNumberForDate(System.DateTime)">
            <summary>
            Returns the week number for a particular date using the current CalendarWeekRule and FirstDayOfWeek.
            </summary>
            <param name="date">DateTime</param>
            <returns>Integer denoting the week number that the date belongs to.</returns>
            <remarks>
            <p class="body">The System.Globalization.Calendar's GetWeekOfYear method simply returns the number of weeks into the year that the date falls on. It does not seem to use the weekrule specified in the arguments. e.g. If the first day of week is sunday and the weekrule is Jan 1, then 12/31/2000 (Sunday) should return 1. Instead it returns 54 and 1/1/2001 (Monday) returns 1.</p>
            <p class="body">This routine returns the correct week number for the specified date based on the CalendarWeekRule and FirstDayOfWeek.</p>
            <p class="note"> Note, this may be a week for a year other than the year of the date. e.g. 12/31/2000, week tt of Jan 1, and week start of sunday will return 1 because this date falls into the first week of the year 2001.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarDateSelectionMode">
            <summary>
            Used to specify the type of selection that is allowed for an object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarDateSelectionMode.Extended">
            <summary>
            Extended Select. Multiple dates in multiple ranges may be selected at once.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarDateSelectionMode.None">
            <summary>
            No dates may be selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarDateSelectionMode.SingleDate">
            <summary>
            Single Select. Only one date may be selected at any time.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarDateSelectionMode.Range">
            <summary>
            A single range that could include multiple contiguous dates may be selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarStates">
            <summary>
            Enumeration used to indicate the current state of the component.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.MinDateInView">
            <summary>
            The <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> is in view
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.MaxDateInView">
            <summary>
            The <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> is in view
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.TodayIsEnabled">
            <summary>
            Indicates that the current date is within the minimum and maximum date range of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.ActiveDate">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> is non-null.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CanZoomOutCalendarMode">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> can be changed to a higher scope - e.g. from Days to Months.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CanZoomInCalendarMode">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> can be changed towards the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> - e.g. from Months to Days.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CalendarModeDays">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CalendarModeMonths">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Months</b>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CalendarModeYears">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Years</b>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CalendarModeDecades">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Decades</b>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.CalendarModeCenturies">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Centuries</b>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.MinCalendarMode">
            <summary>
            Indicates that the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is the same value as the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarStates.RightToLeft">
            <summary>
            Indicates that the FlowDirection of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> is RightToLeft.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarCommandType">
            <summary>
            Identifies the commands exposed by XamCalendar
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ActivateDate">
            <summary>
            Activate a particular date. The source must be a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> or within it - or the CommandParameter must be the date of the day to activate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ActivateSelectedDate">
            <summary>
            Ensures the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> that represents the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> is in view and has the input focus.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.FirstItemOfFirstGroup">
            <summary>
            Navigates to the first <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> of the first <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> in a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> (e.g. the first day of the first month currently in view when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.FirstItemOfGroup">
            <summary>
            Navigates to the first <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> in the current group (e.g. the first day of the month containing the current <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>  when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.LastItemOfGroup">
            <summary>
            Navigates to the last <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> in the current group (e.g. the last day of the month containing the current <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>  when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.LastItemOfLastGroup">
            <summary>
            Navigates to the last <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> of the last <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> in a <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> (e.g. the first day of the last month currently in view when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.NextGroup">
            <summary>
            Navigates to the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> in the previous group (e.g. the same day of the month as the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> in the following month when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.NextItem">
            <summary>
            Navigates to the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> after the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.NextItemRow">
            <summary>
            Navigates to the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> in the previous row (e.g. the same day of the week as the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> in the following week when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.PreviousGroup">
            <summary>
            Navigates to the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> in the previous group (e.g. the same day of the month as the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> in the previous month when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.PreviousItem">
            <summary>
            Navigates to the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> previous to the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.PreviousItemRow">
            <summary>
            Navigates to the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> in the previous row (e.g. the same day of the week as the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> in the previous week when <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ScrollNextGroup">
            <summary>
            Scroll forward by one group
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ScrollNextGroups">
            <summary>
            Scroll forward by the number of groups currently in view
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ScrollPreviousGroup">
            <summary>
            Scroll backward by one group
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ScrollPreviousGroups">
            <summary>
            Scroll backward by the number of groups currently in view
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ScrollToDate">
            <summary>
            Scrolls to the date specified in the command parameter. If this command is sent from within a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>, the date will be scrolled into view in that group if possible - even if it is already in view within another <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.Today">
            <summary>
            Activating the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> that represents the current date.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ToggleActiveDateSelection">
            <summary>
            Toggles the selection of the item represented by the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ZoomOutCalendarMode">
            <summary>
            Increases the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> to a larger date range - e.g. from <b>Days</b> to <b>Months</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarCommandType.ZoomInCalendarMode">
            <summary>
            Decreases the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> to a smaller date range - e.g. from <b>Months</b> to <b>Days</b>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarResourceId">
            <summary>
            An enum that is used to identify certain resources, e.g. brushes, used by elements within the visual tree of <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> derived controls
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.CalendarResourceProvider"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.CalendarBackgroundBrush">
            <summary>
            The background brush of the navigator control
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.CalendarDayStyle">
            <summary>
            The style used for <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/>s
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.CalendarItemStyle">
            <summary>
            The style used for <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/>s
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DayOfWeekBackgroundBrush">
            <summary>
            The background brush of a day of week header
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DayOfWeekForegroundBrush">
            <summary>
            The foreground brush of a day of week header
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DayOfWeekSeparatorBrush">
            <summary>
            The brush used for the separator between the day week header and the days
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledDayOfWeekBackgroundBrush">
            <summary>
            The background brush of a day of week header when the control is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledDayOfWeekForegroundBrush">
            <summary>
            The foreground brush of a day of week header when the control is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledItemBackgroundBrush">
            <summary>
            The background brush of an item when it is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledItemForegroundBrush">
            <summary>
            The foreground brush of an item when it is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledGroupTitleBackgroundBrush">
            <summary>
            The background brush of an item group title when the control is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledGroupTitleForegroundBrush">
            <summary>
            The foreground brush of an item group title when the control is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledWeekNumberBackgroundBrush">
            <summary>
            The background brush of the week number when the control is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.DisabledWeekNumberForegroundBrush">
            <summary>
            The foreground brush of the week number when the control is disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.GroupTitleBackgroundBrush">
            <summary>
            The background brush of an item group title
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.GroupTitleForegroundBrush">
            <summary>
            The foreground brush of an item group title
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ItemBackgroundBrush">
            <summary>
            The background brush of an item
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ItemBorderBrush">
            <summary>
            The border brush of an item
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ItemCorderRadius">
            <summary>
            The corner radius of an item
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ItemForegroundBrush">
            <summary>
            The foreground brush of an item 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ItemInnerBorderBrush">
            <summary>
            The inner border brush of an item 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.FocusRectBrush">
            <summary>
            The brush used for the focus rectangle in the item/day.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingItemBackgroundBrush">
            <summary>
            The background brush of an item that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingItemForegroundBrush">
            <summary>
            The foreground brush of an item that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingTodayBackgroundBrush">
            <summary>
            The background brush of the item representing Today when it is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingTodayForegroundBrush">
            <summary>
            The foreground brush of the item representing Today when it is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingSelectedItemBackgroundBrush">
            <summary>
            The foreground brush of a selected item that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingSelectedItemForegroundBrush">
            <summary>
            The foreground brush of a selected item that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingSelectedFocusedItemBackgroundBrush">
            <summary>
            The foreground brush of a selected focused item that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingSelectedFocusedItemForegroundBrush">
            <summary>
            The foreground brush of a selected focused item that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingTodaySelectedItemBackgroundBrush">
            <summary>
            The background brush of a selected item that represents today that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingTodaySelectedItemForegroundBrush">
            <summary>
            The foreground brush of a selected item representing today that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingTodaySelectedFocusedItemForegroundBrush">
            <summary>
            The foreground brush of a selected focused item representing today that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingTodaySelectedFocusedItemBackgroundBrush">
            <summary>
            The background brush of a selected focused item that represents today that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.LeadingOrTrailingMouseOverItemForegroundBrush">
            <summary>
            The foreground brush of the item under the mouse that is before or after the months being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.MouseOverGroupTitleBackgroundBrush">
            <summary>
            The background brush of an item group title when the mouse is over it.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.MouseOverGroupTitleForegroundBrush">
            <summary>
            The foreground brush of an item group title when the mouse is over it.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.MouseOverItemBackgroundBrush">
            <summary>
            The background brush of an item when the mouse is over it.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.MouseOverItemBorderBrush">
            <summary>
            The border brush of an item when the mouse is over it.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.MouseOverItemForegroundBrush">
            <summary>
            The foreground brush of an item when the mouse is over it. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.MouseOverItemInnerBorderBrush">
            <summary>
            The inner border brush of an item when the mouse is over it. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ScrollNextRepeatButtonStyle">
            <summary>
            The style used for the RepeatButton that will navigate forward.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.ScrollPreviousRepeatButtonStyle">
            <summary>
            The style used for the RepeatButton that will navigate backward.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedFocusedItemBackgroundBrush">
            <summary>
            The background brush of an item when it is selected
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedFocusedItemBorderBrush">
            <summary>
            The border brush of an item when it is selected and focused
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedFocusedItemForegroundBrush">
            <summary>
            The foreground brush of an item when it is selected and focused
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedFocusedItemInnerBorderBrush">
            <summary>
            The inner border brush of an item when it is selected and focused
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedItemBackgroundBrush">
            <summary>
            The background brush of an item when it is selected and focused
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedItemBorderBrush">
            <summary>
            The border brush of an item when it is selected
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedItemForegroundBrush">
            <summary>
            The foreground brush of an item when it is selected 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.SelectedItemInnerBorderBrush">
            <summary>
            The inner border brush of an item when it is selected 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodayBackgroundBrush">
            <summary>
            The background brush of the item representing today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodayBorderBrush">
            <summary>
            The border brush of the item representing today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodayButtonStyle">
            <summary>
            The style used for the Button that will navigate to today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodayForegroundBrush">
            <summary>
            The foreground brush of the item representing today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodaySelectedItemBackgroundBrush">
            <summary>
            The background brush of a selected item that represents today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodaySelectedItemForegroundBrush">
            <summary>
            The foreground brush of a selected item that represents today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodaySelectedFocusedItemBackgroundBrush">
            <summary>
            The background brush of a selected focused item that represents today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodaySelectedFocusedItemForegroundBrush">
            <summary>
            The foreground brush of a selected focused item that represents today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.TodayInnerBorderBrush">
            <summary>
            The inner border brush of the item representing today.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.WeekNumberBackgroundBrush">
            <summary>
            The background brush of the week number
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceId.WeekNumberForegroundBrush">
            <summary>
            The foreground brush of the week number
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarResourceSet">
            <summary>
            An enum that is used to identify the built in themes used by elements within the visual tree of <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> derived controls
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.CalendarResourceProvider"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarResourceProvider.ResourceSet"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Generic">
            <summary>
            The default resource set
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Office2010Blue">
            <summary>
            The resource set for the Office 2010 Blue theme
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Office2010Black">
            <summary>
            The resource set for the Office 2010 Black theme
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Office2010Silver">
            <summary>
            The resource set for the Office 2010 Silver theme
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Office2007Blue">
            <summary>
            The resource set for the Office 2007 Blue theme
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Office2007Black">
            <summary>
            The resource set for the Office 2007 Black theme
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.Office2007Silver">
            <summary>
            The resource set for the Office 2007 Silver theme
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarResourceSet.IGTheme">
            <summary>
            The resource set for the IG theme
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs">
            <summary>
            Provides information for the <see cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/> event.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
            <seealso cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs.#ctor(System.Collections.Generic.IList{System.DateTime},System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs"/>
            </summary>
            <param name="removedDates">A list of the dates that were unselected</param>
            <param name="addedDates">A list of the dates that were selected</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs.RemovedDates">
            <summary>
            Returns a list of the dates that were unselected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs.AddedDates">
            <summary>
            Returns a list of the dates that were selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ITimeRange">
            <summary>
            Interface implemented by an item that spans a given range of time.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarUtilities">
            <summary>
            A class with helper routines.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarUtilities.GetTextToValueConversionError(System.Type,System.String)">
            <summary>
            Gets an error message to display when user input fails to be converted to the specified
            target type.
            </summary>
            <param name="targetType"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarUtilities.IsInfinityOrNaN(System.Object)">
            <summary>
            Returns true if the specified val is double or float and infinity or NaN.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarUtilities.IsNumericType(System.Type)">
            <summary>
            Determines if a given System.Type is a numeric type.
            </summary>
            <param name="type">The System.Type to test.</param>
            <returns>True if the type is a numeric type.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarUtilities.Exists(System.Collections.IEnumerable,System.Object)">
            <summary>
            Returns true if the item exists in the specified enumerable.
            </summary>
            <param name="e"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarUtilities.IsMouseOverElement(System.Windows.DependencyObject,System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns a value indicating whether the mouse position associated with the specified 
            mouse event args is inside the specified element.
            </summary>
            <param name="element"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarUtilities.IsValueEmpty(System.Object)">
            <summary>
            Returns true if the specified val is null, DBNull, empty string, or DependencyProperty.UnsetValue.
            </summary>
            <param name="val">Value to test</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.ValidatedObservableCollection`1">
            <summary>
            An observable collection that allows you to specify a delegate for validating items being
            added to the collection.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Infragistics.Controls.Editors.HorizontalToTextAlignmentConverter">
            <summary>
            A converter that converts HorizontalAlignment to TextAlignment.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.HorizontalToTextAlignmentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value to the specified target type.
            </summary>
            <param name="value">The value to be converted</param>
            <param name="targetType">The type to which the value should be converted</param>
            <param name="parameter">Optional parameter to provide additional information for the conversion</param>
            <param name="culture">Optional culture used during the conversion</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.HorizontalToTextAlignmentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value back to the specified target type.
            </summary>
            <param name="value">The value to be converted</param>
            <param name="targetType">The type to which the value should be converted</param>
            <param name="parameter">Optional parameter to provide additional information for the conversion</param>
            <param name="culture">Optional culture used during the conversion</param>
            <returns>The converted value</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarBase">
            <summary>
            A custom control used to display one or more months.
            </summary>
            <remarks>
            <p class="body">The CalendarBase provides functionality similar to that of the Microsoft Vista 
            Common Controls Calendar class.
            </p>
            <p class="body">The control provides navigation style functionality whereby you can zoom out to more 
            quickly navigate the available dates and then zoom back into to change the selection. The <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> 
            is used to control the current mode. The <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> may be used to control the lowest level 
            of dates that the end user may navigate into.
            </p>
            <p class="body">The default template for CalendarBase uses a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> 
            that will generate <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances based on the row/column count specified 
            via the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/>. In addition, when the <see cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/> 
            property is set to true, which is the default value, the panel will automatically generate additional groups 
            to fill the available space up to its <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/>. The <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/> 
            is used by the groups to determine which dates should be shown.
            </p>
            <p class="body">The control supports multiple selection modes which can be controlled via its <see cref="T:Infragistics.Controls.Primitives.SelectionType"/>. 
            When using a multiple selection mode such as <b>Extended</b> or <b>Range</b>, the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/> property 
            may be used to access/change the selection up to the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates"/>. The control also exposes a <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> property which is 
            primarily used when in a single select mode. When in a multiselect mode, this property will return the first selected date.
            </p>
            <p class="body">The control exposes a number of properties that may be used to restrict the selectable dates. The 
            <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> are used to control the range within which the user may navigate. You can 
            then disable dates within that range using either the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/>.
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ActiveDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ActiveDate">
            <summary>
            Returns or sets the date of the active day.
            </summary>
            <remarks>
            <p class="body">The ActiveDate is used to determine which <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> within the control has the input focus when the keyboard focus is 
            within the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>. Keyboard navigation within the control is then based on that item's dates.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ActiveDateProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.AllowLeadingAndTrailingGroupActivationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.AllowLeadingAndTrailingGroupActivation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.AllowLeadingAndTrailingGroupActivation">
            <summary>
            Returns or sets a boolean that indicates if items within a CalendarItemGroup whose IsLeadingGroup or IsTrailingGroup is true can be activated.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.AllowLeadingAndTrailingGroupActivationProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsLeadingGroup"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.IsTrailingGroup"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions">
            <summary>
            Returns or sets whether the control should automatically calculate and change the calendar dimensions based on the size used to arrange the CalendarBase.
            </summary>
            <remarks>
            <p class="body">The AutoAdjustDimensions property is used by the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> within the 
            template of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> that indicates whether it should automatically generate additional <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> 
            instances when it has more space available than can be used by the groups specified by the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/>.</p>
            <p class="note">If you retemplate the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> such that it does not contain a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>, 
            this property will not affect the display of the control.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensionsProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.CalendarDayStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CalendarDayStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.CalendarDayStyle">
            <summary>
            Returns or sets the default style to use for <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> instances within the control.
            </summary>
            <remarks>
            <p class="body">When this property is set, the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/> will set the <see cref="P:System.Windows.FrameworkElement.Style"/> property 
            of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> instances that it creates.</p>
            <p class="note"><b>Note:</b> Since the Style property will be explicitly set using this value, any local styles that target the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> will not be used.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.CalendarDayStyleProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.CalendarItemStyle"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.CalendarItemStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CalendarItemStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.CalendarItemStyle">
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.CalendarItemStyleProperty"/>
            <summary>
            Returns or sets the default style to use for <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances within the control.
            </summary>
            <remarks>
            <p class="body">When this property is set, the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemArea"/> will set the <see cref="P:System.Windows.FrameworkElement.Style"/> property 
            of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances that it creates.</p>
            <p class="note"><b>Note:</b> Since the Style property will be explicitly set using this value, any local styles that target the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> will not be used.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.CalendarItemStyleProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.CalendarDayStyle"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.CurrentModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode">
            <summary>
            Returns or sets which types of calendar items will be displayed to the end user.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> provides the ability to zoom out to see larger ranges of dates and then zoom back 
            in to change the selection similar to the functionality found in the Microsoft Vista Common Controls Calendar. The CurrentMode 
            controls the current mode that the contained <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances use to initialize its items. For example, when set to 
            <b>Days</b>, which is the default value, the CalendarItemGroup will contain <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/> instances where each represents 
            a discrete date. When set to <b>Months</b>, the CalendarItemGroups will contain <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> instances where each represents 
            a single month within a specific year.</p>
            <p class="body">There are two commands (<see cref="F:Infragistics.Controls.Editors.CalendarCommandType.ZoomOutCalendarMode"/> 
            and <see cref="F:Infragistics.Controls.Editors.CalendarCommandType.ZoomInCalendarMode"/>) that may be used to change the CurrentMode.</p>
            <p class="note"><b>Note:</b> The value for this property cannot be set to a value that would be less than the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.CurrentModeProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderFormatProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderFormat"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderFormat">
            <summary>
            Returns or sets the format for the header of the days of the week.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderFormatProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderVisibility">
            <summary>
            Returns or sets a value indicating whether the day of week headers should be displayed.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderFormat"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.DayOfWeekHeaderVisibilityProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.DimensionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.Dimensions"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.Dimensions">
            <summary>
            Returns or sets a value indicating the preferred rows and columns of groups to be displayed within the control.
            </summary>
            <remarks>
            <p class="body">The CalendarDimensions is used by the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> within the template of the 
            <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> to determine the minimum number of rows and columns of <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> 
            instances that it should create and arrange. If the <see cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/> is true, which is the 
            default value, and the CalendarItemGroupPanel has space to display mode groups it will automatically create additional 
            groups up to its <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/>.</p>
            <p class="note">If you re-template the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> such that it does not contain a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>, 
            this property will not affect the display of the control.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.DimensionsProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.IsSelectionActiveProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.IsSelectionActive"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.IsSelectionActive">
            <summary>
            Returns true if keyboard focus is within the control (read-only)
            </summary>
            <remarks>
            <p class="body">The IsSelectionActive property is a read only property similar to that of 
            the <see cref="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)"/> that is used to indicate whether keyboard focus is 
            within the control and therefore can be used to control how the selected items are rendered.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.IsSelectionActiveProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibility">
            <summary>
            Returns or sets a boolean indicating whether to show days from the month before/after the first/last visible month.
            </summary>
            <remarks>
            <p class="body">Leading and trailing dates are those dates displayed within a group that do not belong that to that particular 
            group. For example, when viewing a gregorian calendar that displays August 2008 with a default first day of week of 
            Sunday, a calendar has space available to show the 27-31 of July (leading) and the 1-6 of September (trailing). By default 
            leading and trailing dates are displayed within the first and last <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> within the control.</p>
            <p class="note"><b>Note:</b> The default template for the CalendarBase uses a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> that 
            ensures that only the first and last CalendarItemGroup instances have their <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/> 
            and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/> initialized based on this property. If you retemplate the control to 
            directly contain CalendarItemGroup instances you will need to control which groups use this property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.LeadingAndTrailingDatesVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowTrailingDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ShowLeadingDates"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.MaxDateResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.MaxDateResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.MaxDateResolved">
            <summary>
            Returns the maximum allowed date (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.MaxDateResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.MinCalendarModeResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.MinCalendarModeResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.MinCalendarModeResolved">
            <summary>
            Returns the minimum <see cref="T:Infragistics.Controls.Editors.CalendarZoomMode"/> that is supported
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.MinCalendarModeResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.MinDateResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.MinDateResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.MinDateResolved">
            <summary>
            Returns the minimum allowed date (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.MinDateResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ReferenceDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate">
            <summary>
            Returns or sets a date that is used to determine the dates that should be displayed within the control.
            </summary>
            <remarks>
            <p class="body">The reference date is used to determine the dates that are displayed within the reference group. The 
            reference group is the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> whose <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ReferenceGroupOffset"/> is 
            zero. By default, the CalendarBase used a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> that autogenerates the groups 
            and sets the first created group's ReferenceGroupOffset to 0.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ReferenceDateProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ResourceProviderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ResourceProvider"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ResourceProvider">
            <summary>
            Returns or sets an object that provides resources for use by elements in the visual tree.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ResourceProviderProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ResourceProviderResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.ResourceProviderResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ResourceProviderResolved">
            <summary>
            Returns the resource provider to use.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ResourceProviderResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibility">
            <summary>
            Returns or sets the visibility of the scroll buttons with the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances.
            </summary>
            <remarks>
            <p class="body">The ScrollButtonVisibility is used to indicate whethe the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances 
            within the control should display the previous and next scroll buttons. The default template for the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> 
            uses a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> that autogenerates the groups displayed within the control. When scroll buttons 
            are to be displayed, it ensures that the scroll previous of the upper left most group and the scroll next of the 
            upper right most group will display their scroll buttons. If you retemplate the CalendarBase to directly contain 
            CalendarItemGroups then you must selectively bind the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibility"/> 
            and <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibility"/> to this property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollNextButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroup.ScrollPreviousButtonVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ScrollDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollDirection"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ScrollDirection">
            <summary>
            Determines the direction that months are scrolled.
            </summary>
            <remarks>
            <p class="body">By default the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollDirection"/> is set to Horizontal.</p>
            </remarks>        
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyle">
            <summary>
            Returns or sets the style for the 'ScrollNext' RepeatButton.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleResolved"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleResolved">
            <summary>
            Returns the style to use for the 'ScrollNext' RepeatButton (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyle"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollNextRepeatButtonStyleResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyle">
            <summary>
            Returns or sets the style for the 'ScrollPrevious' RepeatButton.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleResolved"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleResolved">
            <summary>
            Returns the style to use for the 'ScrollPrevious' RepeatButton (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyle"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.ScrollPreviousRepeatButtonStyleResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.SelectedDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate">
            <summary>
            Returns or sets the date of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> that should be selected or null if no item is selected.
            </summary>
            <remarks>
            <p class="body">The SelectedDate returns the first date that is selected within the control and is primarily used 
            when using a <see cref="T:Infragistics.Controls.Primitives.SelectionType"/> of <b>Single</b>. If you are using a SelectionType that allows multiple 
            dates to be selected, then you can use the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/> to get a complete list of the dates that 
            are selected. The SelectedDates will include the SelectedDate.</p>
            <p class="note"><b>Note:</b> When the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> is set to a value other than days, selecting 
            a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> will only add 1 entry for each selected item. It will not add each date in the item's 
            range into the SelectedDates.</p>
            <p class="note"><b>Note:</b> When in navigation mode (i.e. the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is 
            not equal to the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>), the selection cannot be changed via the ui. Instead 
            using the mouse will change the active item and the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsSelected"/> state will be based on which 
            item is active (<see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsActive"/>).</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.SelectedDateProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
            <seealso cref="T:Infragistics.Controls.Primitives.SelectionType"/>
            <seealso cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates">
            <summary>
            Returns a collection of <see cref="T:System.DateTime"/> instances that represents the currently selected dates of the items in the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>.
            </summary>
            <remarks>
            <p class="body">The SelectedDates is a collection of DateTime instances that represent the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> 
            instances that should be selected or have been selected by the end user. When the <see cref="T:Infragistics.Controls.Primitives.SelectionType"/> is set 
            to a value that allows multiple selection such as <b>Range</b> or <b>Extended</b>, the control will allow selection of 
            one more CalendarItems. A single date for each item will be added to the SelectedDates. The <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> 
            property can be used to access the first item.</p>
            <p class="note"><b>Note:</b> When the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> is set to a value other than days, selecting 
            a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> will only add 1 entry for each selected item. It will not add each date in the item's 
            range into the SelectedDates.</p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates"/>
            <seealso cref="T:Infragistics.Controls.Primitives.SelectionType"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/>
            <seealso cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonCaptionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonCaption"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonCaption">
            <summary>
            Returns the caption to use for the 'Today' Button (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonCaptionProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyle">
            <summary>
            Returns or sets the style for the 'Today' Button.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleResolved"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleResolved">
            <summary>
            Returns the style to use for the 'Today' Button (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyle"/>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.TodayButtonStyleResolvedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.WeekNumberVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.CalendarBase.WeekNumberVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.WeekNumberVisibility">
            <summary>
            Returns or sets a boolean that indicates whether week numbers should be displayed.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.WeekNumberVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.TodayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.CalendarBase.Today"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.Today">
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.TodayProperty"/>
            <summary>
            Returns a DateTime that represents today's date.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.TodayProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.AllowableDateRange">
            <summary>
            Set by dervied classes to constrain the min/max date range
            </summary>
            <remarks><para class="body">When this is changed the <see cref="P:Infragistics.Controls.Editors.CalendarBase.MinDateResolved"/> and <see cref="P:Infragistics.Controls.Editors.CalendarBase.MaxDateResolved"/> properties are set accoringly.</para></remarks>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.MinDateResolved"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.MaxDateResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.FirstDayOfWeekInternal">
            <summary>
            Set by derived classes to change the first day of the week
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarBase.WeekRuleInternal">
            <summary>
            Set by derived classes to change the week rule
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.CalendarBase.CalendarProperty">
            <summary>
            Identifies the read-only Calendar attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.CalendarBase.GetCalendar(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.GetCalendar(System.Windows.DependencyObject)">
            <summary>
            Returns the containing <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Editors.CalendarBase.CalendarProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.BringDateIntoView(System.DateTime)">
            <summary>
            Scrolls the specified <see cref="T:System.DateTime"/> into view ignoring leading and trailing dates.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> representing the date that should be brought into view.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.ExecuteCommand(Infragistics.Controls.Editors.CalendarCommandType,System.Object,System.Windows.FrameworkElement)">
            <summary>
            Executes the specified <see cref="T:Infragistics.Controls.Editors.CalendarCommandType"/>.
            </summary>
            <param name="command">The Command to execute.</param>
            <param name="parameter">An optional parameter.</param>
            <param name="sourceElement">The source of the command</param>
            <returns>True if command was executed, false if canceled.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.CalendarCommandType"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.GetDayOfWeekHeader(System.DayOfWeek)">
            <summary>
            Returns the day of week caption
            </summary>
            <param name="dayofWeek">The day of the week</param>
            <returns>A string representing this day of week.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.InvalidateDisplay">
            <summary>
            Will cause the display to refresh. Called when a property that affects the display has changed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.InvalidateIsHighlighted(System.DateTime)">
            <summary>
            Will cause all days within a month to re-initialize their IsHighlighted state. 
            </summary>
            <param name="dayinMonth">Any day of the month in question.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.SetCalendarInfo(System.Globalization.Calendar,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Called by a derived class to supply calendar information
            </summary>
            <param name="calendar">The calendar to use for date manipulations.</param>
            <param name="dateTimeFormat">The DateTimeFormatInfo used for formatting dates.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.ShouldHighlightDay(Infragistics.Controls.Editors.Primitives.CalendarDay)">
            <summary>
            Returns true if the day element should be highlighed
            </summary>
            <param name="dayElement"></param>
            <returns>True to highlight the day.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.CalendarDay"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarItem.IsHighlighted"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.GetSelectableDates(Infragistics.DateRange)">
            <summary>
            Returns an array of ranges indicating the dates which are selectable in given a range.
            </summary>
            <param name="range">The range of dates whose selectable state is to be evaluated.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnSelectedDatesChanged(Infragistics.Controls.Editors.SelectedDatesChangedEventArgs)">
            <summary>
            Occurs after the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/> has been changed.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged">
            <summary>
            Occurs after the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/> has been changed.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.CalendarBase.OnSelectedDatesChanged(Infragistics.Controls.Editors.SelectedDatesChangedEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Editors.SelectedDatesChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/>
            <seealso cref="T:Infragistics.Controls.Primitives.SelectionType"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnSelectionCommitted(System.EventArgs)">
            <summary>
            Occurs after the mouse is release after a selection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.CalendarBase.SelectionCommitted">
            <summary>
            Occurs after the mouse is release after a selection.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.CalendarBase.OnSelectionCommitted(System.EventArgs)"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnApplyTemplate">
            <summary>
            Invoked when the control's template has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnCreateAutomationPeer">
            <summary>
            Returns <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> Automation Peer Class <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer"/>
            </summary>
            <returns>AutomationPeer</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked when the element receives keyboard focus.
            </summary>
            <param name="e">Provides data about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsKeyboardFocused property is changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsKeyboardFocusWithin property is changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse capture is lost
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Raised when the mouse wheel is rotated while over the control.
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarBase.OnActiveSelectionStrategyChanged(Infragistics.Controls.Primitives.SelectionStrategyBase)">
            <summary>
            Invoked when the active <see cref="T:Infragistics.Controls.Primitives.SelectionStrategyBase"/> used by the control has been changed.
            </summary>
            <param name="strategy">The new active strategy or null if no strategy is currently being used.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.CalendarResourceProvider">
            <summary>
            A class that exposes an indexer to retrieve resources used by elements within the visual tree of <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> derived controls
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarResourceProvider.GetResource(Infragistics.Controls.Editors.CalendarResourceId)">
            <summary>
            Returns a value for a specific id
            </summary>
            <param name="id">The id of the resource</param>
            <returns>The resource identified by the id or null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.CalendarResourceProvider.IsResourceValid(Infragistics.Controls.Editors.CalendarResourceId,System.Object)">
            <summary>
            Returns true if this is a valid resource
            </summary>
            <param name="id">The id of the resource</param>
            <param name="resource">The resource that was found</param>
            <returns>True if the resource is valid, otherwise false</returns>
            <remarks>
            <para class="body">For example, if the id represents a Bursh and a Pen is fould then this method should return false.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.CalendarResourceProvider.ResourceSet">
            <summary>
            Returns or sets an enumeration that determines which resource set to use.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamCalendar">
            <summary>
            A custom control used to display one or more months.
            </summary>
            <remarks>
            <p class="body">The CalendarBase provides functionality similar to that of the Microsoft Vista 
            Common Controls Calendar class.
            </p>
            <p class="body">The control provides navigation style functionality whereby you can zoom out to more 
            quickly navigate the available dates and then zoom back into to change the selection. The <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> 
            is used to control the current mode. The <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> may be used to control the lowest level 
            of dates that the end user may navigate into.
            </p>
            <p class="body">The default template for CalendarBase uses a <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel"/> 
            that will generate <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances based on the row/column count specified 
            via the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarDimensions"/>. In addition, when the <see cref="P:Infragistics.Controls.Editors.CalendarBase.AutoAdjustDimensions"/> 
            property is set to true, which is the default value, the panel will automatically generate additional groups 
            to fill the available space up to its <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemGroupPanel.MaxGroups"/>. The <see cref="P:Infragistics.Controls.Editors.CalendarBase.ReferenceDate"/> 
            is used by the groups to determine which dates should be shown.
            </p>
            <p class="body">The control supports multiple selection modes which can be controlled via its <see cref="T:Infragistics.Controls.Primitives.SelectionType"/>. 
            When using a multiple selection mode such as <b>Extended</b> or <b>Range</b>, the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/> property 
            may be used to access/change the selection up to the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates"/>. The control also exposes a <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> property which is 
            primarily used when in a single select mode. When in a multiselect mode, this property will return the first selected date.
            </p>
            <p class="body">The control exposes a number of properties that may be used to restrict the selectable dates. The 
            <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> are used to control the range within which the user may navigate. You can 
            then disable dates within that range using either the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamCalendar.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.XamCalendar"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates">
            <summary>
            Returns a modifiable collection of <see cref="T:Infragistics.DateRange"/> instances that indicates the items that should be considered disabled.
            </summary>
            <remarks>
            <p class="body">The DisabledDates is a collection of <see cref="T:Infragistics.DateRange"/> instances that represent ranges of dates that should 
            not be selectable by the end user. Dates may also be disabled using the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> property.</p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek">
            <summary>
            Returns or sets a flagged enumeration indicating which days of the week are always disabled.
            </summary>
            <remarks>
            <p class="body">The DisabledDaysOfWeek is a flagged enumeration that can be used to prevent selection of 
            one or more days of the week. The <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/> may be used to disable specific dates (or 
            ranges of dates).</p>
            <p class="body">When the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibility"/> property is set to true 
            the disabled days of the week will be hidden from the display.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibility">
            <summary>
            Returns or sets a boolean indicating whether days of the week disabled using the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> should be displayed in the calendar.
            </summary>
            <remarks>
            <p class="body">By default all days of the week will be displayed within the control including those 
            that are disabled using the <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/>. This property can be set to true to 
            hide the disabled days of the week.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeekVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.MaxDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.MaxDate">
            <summary>
            Returns or sets the preferred maximum date that can be selected or activated for the control.
            </summary>
            <remarks>
            <p class="body">The MaxDate and <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> are used to control the range of dates that 
            are available to the end user. Days outside that range will not be displayed.</p>
            <p class="body">The <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> may be 
            used to prevent selection/activation of dates within the MinDate/MaxDate range.</p>
            <p class="note"><b>Note:</b> The actual range available could be smaller than that specified by the 
            MinDate and MaxDate if it is outside the values allowed by the <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime"/> 
            and <see cref="P:System.Globalization.Calendar.MinSupportedDateTime"/> of the culture used by the control. The culture used is 
            based upon the <see cref="P:System.Windows.FrameworkElement.Language"/> property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.MaxDateProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates">
            <summary>
            Returns or sets the maximum number of days that can be selected at any time.
            </summary>
            <p class="note">The MaxSelectedDates is only used when the <see cref="T:Infragistics.Controls.Primitives.SelectionType"/> is set 
            to a value that allows multiple selection such as <b>Range</b> or <b>Extended</b>.</p>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDatesProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
            <seealso cref="T:Infragistics.Controls.Primitives.SelectionType"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.MinCalendarModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.MinCalendarMode">
            <summary>
            Returns or sets an enumeration that indicates the minimum calendar item type that can be selected within the control.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> provides the ability to zoom out to see larger ranges of dates and then zoom back 
            in to change the selection similar to the functionality found in the Microsoft Vista Common Controls Calendar. While the 
            CurrentMode controls the current mode that the contained <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> instances use to display its items, the 
            MinCalendarMode determines the minimum mode into which the control may zoom. For example, when set the <b>Months</b>, the control will not 
            be able to zoom in any further to allow selection/viewing of individual dates/days.</p>
            <p class="body">When the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/> is set to the same value as the MinCalendarMode, interacting within the items (e.g. 
            via the keyboard and mouse) will affect the current <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> and <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>. When the CurrentMode 
            is higher than the MinCalendarMode (i.e. the user has zoomed out), the selection will not be changed via the ui. Instead, the keyboard and 
            mouse will be used to navigate the calendar without affecting the current selection. When the user then zooms in to the MinCalendarMode, they 
            may then modify the selection.</p>
            <p class="body">There are two commands (<see cref="F:Infragistics.Controls.Editors.CalendarCommandType.ZoomOutCalendarMode"/> 
            and <see cref="F:Infragistics.Controls.Editors.CalendarCommandType.ZoomInCalendarMode"/>) that may be used to change the CurrentMode.</p>
            <p class="note"><b>Note:</b> The value for this property will restrict the available values for the <see cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.MinCalendarModeProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.CurrentMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.MinDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.MinDate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.MinDate">
            <summary>
            Returns or sets the preferred minimum date that can be selected or activated for the control.
            </summary>
            <remarks>
            <p class="body">The MinDate and <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/> are used to control the range of dates that 
            are available to the end user. Days outside that range will not be displayed.</p>
            <p class="body">The <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/> and <see cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/> may be 
            used to prevent selection/activation of dates within the MinDate/MaxDate range.</p>
            <p class="note"><b>Note:</b> The actual range available could be smaller than that specified by the 
            MinDate and MaxDate if it is outside the values allowed by the <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime"/> 
            and <see cref="P:System.Globalization.Calendar.MinSupportedDateTime"/> of the culture used by the control. The culture used is 
            based upon the <see cref="P:System.Windows.FrameworkElement.Language"/> property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.MinDateProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MaxDate"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.FirstDayOfWeek"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> that represents the first day of the week or null to use the value from the current <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
            <remarks>
            <p class="body">By default the FirstDayOfWeek is set to null. When set to null, the <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek"/> 
            from the control's <see cref="P:System.Windows.FrameworkElement.Language"/> will be used.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.SelectionModeProperty">
            <summary>
            Identifies the <see cref="T:Infragistics.Controls.Primitives.SelectionType"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.SelectionMode">
            <summary>
            Determines how many items can be selected.
            </summary>
            <remarks>
            <p class="body">The default selection type is Extended which allows multiple discontinuous 
            ranges of dates to be selected. As dates are selected, the <see cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/> 
            event is raised and the <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDate"/> and <see cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/> properties 
            are updated. When using a multiple selection type such as Extended or Range, you can use the 
            <see cref="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates"/> to control the maximum number of <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> 
            instances that the user can select.</p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.CalendarBase.SelectedDates"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamCalendar.MaxSelectedDates"/>
            <seealso cref="E:Infragistics.Controls.Editors.CalendarBase.SelectedDatesChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.TodayButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.TodayButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.TodayButtonVisibility">
            <summary>
            Returns or sets a boolean that indicates whether the today button should be displayed.
            </summary>
            <remarks>
            <p class="body">The Today button is used to allow the user to select and bring into view the 
            <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> that represents the current date. This button uses the <see cref="F:Infragistics.Controls.Editors.CalendarCommandType.Today"/> 
            command to perform the operation.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.WeekRuleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.WeekRule"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.WeekRule">
            <summary>
            Returns or sets the rule used to determine the first week of the year.
            </summary>
            <remarks>
            <p class="body">By default the <see cref="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule"/> of the Culture associated 
            with the control's <see cref="P:System.Windows.FrameworkElement.Language"/> is used to determine the week numbers for 
            dates displayed within the control. The WeekRule is used when calculating the 
            <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarItemArea.WeekNumbers"/>.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamCalendar.WorkdaysProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamCalendar.Workdays"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCalendar.Workdays">
            <summary>
            Returns or sets a flagged enumeration indicating which days of the week represent working days.
            </summary>
            <remarks>
            <p class="body">The Workdays is a flagged enumeration that may be set to one or more days. The WorkDays is 
            used to initialize the <see cref="P:Infragistics.Controls.Editors.Primitives.CalendarDay.IsWorkday"/> to allow custom styling of days. This property 
            defaults to all days of the week excluding Saturday and Sunday.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamCalendar.WorkdaysProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.CalendarDay.IsWorkday"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamCalendar.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamCalendar.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Editors.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.AutomationPeers.PeerProxy"/> class
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetAcceleratorKeyCore">
            <summary>
            Returns the accelerator key for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The accelerator key</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetAccessKeyCore">
            <summary>
            Returns the access key for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The access key</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetAutomationIdCore">
            <summary>
            Returns the AutomationIdentifier for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The ui automation identifier</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetBoundingRectangleCore">
            <summary>
            Returns the <see cref="T:System.Windows.Rect"/> that represents the bounding rectangle of the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The bounding rectangle</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>
            </summary>
            <returns>The collection of child elements</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetClickablePointCore">
            <summary>
            Returns the <see cref="T:System.Windows.Point"/> that represents the clickable space for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The point that represents the clickable space on the element</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The help text</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetItemStatusCore">
            <summary>
            Returns a string that conveys the parent status for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The status</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetItemTypeCore">
            <summary>
            Returns a human readable string that contains the type of item for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The item type</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetLabeledByCore">
            <summary>
            Returns the <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> for the Label that is targeted to the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The AutomationPeer of the Label that targets this element</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetNameCore">
            <summary>
            Returns the text label for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The text label</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetOrientationCore">
            <summary>
            Returns the value that indicates the direction in which the <see cref="T:System.Windows.UIElement"/> is laid out.
            </summary>
            <returns>The direction of the <see cref="T:System.Windows.UIElement"/> or <b>AutomationOrientation.None</b> if no direction is specified</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.HasKeyboardFocusCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> currently has the keyboard input focus.
            </summary>
            <returns><b>True</b> if the <see cref="T:System.Windows.UIElement"/> has the keyboard input focus; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsContentElementCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> contains data that is presented to the user.
            </summary>
            <returns><b>True</b> if the <see cref="T:System.Windows.UIElement"/> is a content element; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsControlElementCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> is understood by the end user as interactive.
            </summary>
            <returns><b>True</b> if the <see cref="T:System.Windows.UIElement"/> is a control; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsEnabledCore">
            <summary>
            Returns a value indicating whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> can receive and send events.
            </summary>
            <returns><b>True</b> if the <see cref="T:System.Windows.UIElement"/> can send and receive events; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsKeyboardFocusableCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> can accept keyboard focus.
            </summary>
            <returns><b>True</b> if the element can accept keyboard focus; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsOffscreenCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> is off the screen.
            </summary>
            <returns><b>True</b> if the element is off the screen; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsPasswordCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> contains protected content.
            </summary>
            <returns><b>True</b> if the element contains protected content; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.IsRequiredForFormCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> is required to be completed on the form.
            </summary>
            <returns><b>True</b> if the element is required to be completed; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.SetFocusCore">
            <summary>
            Sets the keyboard input focus on the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.GetUnderlyingPeer">
            <summary>
            Returns the automation peer for which this proxy is associated.
            </summary>
            <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PeerProxy.ThrowIfNotEnabled">
            <summary>
            Throws a <see cref="T:System.Windows.Automation.ElementNotEnabledException"/> if the element is not enabled.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarItemAutomationPeer">
            <summary>
            Exposes the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemAutomationPeer.#ctor(Infragistics.Controls.Editors.Primitives.CalendarItem)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/>
            </summary>
            <returns>A string that contains 'CalendarItem'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemAutomationPeer.GetPatternCore(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> that corresponds with this <see cref="T:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer">
            <summary>
            Exposes the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer.#ctor(Infragistics.Controls.Editors.Primitives.CalendarItemGroup)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/>
            </summary>
            <returns>A string that contains 'CalendarItemGroup'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer.GetPatternCore(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroup"/> that corresponds with this <see cref="T:Infragistics.AutomationPeers.CalendarItemGroupAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer.#ctor(Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle"/>
            </summary>
            <returns>A string that contains 'CalendarItemGroupTitle'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer.GetPatternCore(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItemGroupTitle"/> that corresponds with this <see cref="T:Infragistics.AutomationPeers.CalendarItemGroupTitleAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.#ctor(Infragistics.Controls.Editors.CalendarBase,System.DateTime)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.AutomationPeers.SelectedDateAutomationPeer"/>
            </summary>
            <param name="CalendarBase">An <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> instance</param>
            <param name="dateTime">An <see cref="T:System.DateTime"/> structure</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.DateTime"/>
            </summary>
            <returns>A string that contains 'DateTime'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.GetNameCore">
            <summary>
            Returns the day for the <see cref="T:System.DateTime"/> that corresponds with the DateTime struct that is associated with this <see cref="T:Infragistics.AutomationPeers.SelectedDateAutomationPeer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:System.DateTime"/> that corresponds with this <see cref="T:Infragistics.AutomationPeers.SelectedDateAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.GetUnderlyingPeer">
            <summary>
            Returns the automation peer for which this proxy is associated.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.SelectedDateAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.SelectedDateAutomationPeer.IsEnabledCore">
            <summary>
            Returns a value indicating whether the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> can receive and send events.
            </summary>
            <returns><b>True</b> if the <see cref="T:Infragistics.Controls.Editors.Primitives.CalendarItem"/> can send and receive events; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarBaseAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarBaseAutomationPeer.#ctor(Infragistics.Controls.Editors.CalendarBase)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.AutomationPeers.CalendarBaseAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarBaseAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarBaseAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/>
            </summary>
            <returns>A string that contains 'XamOutlookBar'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarBaseAutomationPeer.GetPatternCore(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Controls.Editors.CalendarBase"/> that corresponds with this <see cref="T:Infragistics.AutomationPeers.CalendarBaseAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
    </members>
</doc>
