<UserControl x:Class="fr.guiet.kquatre.ui.views.FireworkUserControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"             
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" 
             xmlns:kQuatreUI="clr-namespace:fr.guiet.kquatre.ui.timeline"
             xmlns:conv="clr-namespace:fr.guiet.kquatre.ui.converters" 
             xmlns:controls="clr-namespace:fr.guiet.kquatre.ui.controls.segments"
             mc:Ignorable="d" d:DesignHeight="450" Background="White">

    <UserControl.Resources >
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/TimelineDictionary.xaml"/>
                <ResourceDictionary Source="../Resources/ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key = "TriggerStyle" TargetType = "Button">
                <Setter Property = "Foreground" Value = "Black" />
                <Style.Triggers>
                    <Trigger Property = "IsEnabled" Value = "True">
                        <Setter Property = "Background" Value = "Red" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <conv:CountToVisibilityConverter x:Key="CountToVisibilityConverter"></conv:CountToVisibilityConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="10 10 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <!-- GridSplitter Visibility Collapsed by default -->
            <RowDefinition Height="Auto"/>
            <!-- Rescue lines Visibility Collapsed by default -->
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Row="0" Grid.Column="0" Margin="2,2,20,2" Header="Durée totale du feu">
                <!--Credit for segment control : Yury Yuhno from Latvia
                https://www.codeproject.com/Articles/1277331/Seven-Segment-and-Sixteen-Segment-Controls-for-WPF-->
                <controls:SixteenSegmentsStack             
        	        Value="{Binding FireworkManager.TotalDurationUI}"
        	        ElementsCount="5"
        	        ShowColon="True"
        	        ShowDot="False"
        	        RoundedCorners="False"
                    SelectedFillBrush="Black"
        	        HorizontalAlignment="Center" 
                    Height="50" 
                    VerticalAlignment="Center" 
                    Width="200"/>
            </GroupBox>
            <GroupBox Grid.Row="0" Grid.Column="1" Margin="2,2,20,2" Header="Temps écoulé">
                <!--<ig:XamSegmentedDisplay VerticalAlignment="Center" Margin="10,10,10,10" Text="{Binding FireworkManager.ElapsedTimeString}" Name="_segChrono" SegmentMode="SevenSegment"
                                    Digits="6" Width="150" Height="50" >
                    <ig:XamSegmentedDisplay.TextForeground>
                        <RadialGradientBrush>
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="Lime" Offset="1"/>
                        </RadialGradientBrush>
                    </ig:XamSegmentedDisplay.TextForeground>
                </ig:XamSegmentedDisplay>
                -->
                <!--Credit for segment control : Yury Yuhno from Latvia
                https://www.codeproject.com/Articles/1277331/Seven-Segment-and-Sixteen-Segment-Controls-for-WPF-->
                <controls:SixteenSegmentsStack             
        	        Value="{Binding FireworkManager.ElapsedTimeString}"
        	        ElementsCount="5"
        	        ShowColon="True"
        	        ShowDot="False"
        	        RoundedCorners="False"
                    SelectedFillBrush="Green"
        	        HorizontalAlignment="Center" 
                    Height="50" 
                    VerticalAlignment="Center" 
                    Width="200"/>
            </GroupBox>
            <GroupBox Grid.Row="0" Grid.Column="2" Margin="2,2,20,2" Header="Prochain tir">
                <!--Credit for segment control : Yury Yuhno from Latvia
                https://www.codeproject.com/Articles/1277331/Seven-Segment-and-Sixteen-Segment-Controls-for-WPF-->
                <controls:SixteenSegmentsStack             
        	        Value="{Binding FireworkManager.NextLaunchCountDownString}"
        	        ElementsCount="5"
        	        ShowColon="True"
        	        ShowDot="False"
        	        RoundedCorners="False"
                    SelectedFillBrush="Orange"
        	        HorizontalAlignment="Center" 
                    Height="50" 
                    VerticalAlignment="Center" 
                    Width="200"/>
                <!--<ig:XamSegmentedDisplay VerticalAlignment="Center" Margin="10,10,10,10" Text="{Binding FireworkManager.NextLaunchCountDownString}" Name="_segNextFirework" SegmentMode="SevenSegment"
                                    Digits="6" Width="150" Height="50" >
                    <ig:XamSegmentedDisplay.TextForeground>
                        <RadialGradientBrush>
                            <GradientStop Color="OrangeRed" Offset="0"/>
                            <GradientStop Color="Orange" Offset="1"/>
                        </RadialGradientBrush>
                    </ig:XamSegmentedDisplay.TextForeground>
                </ig:XamSegmentedDisplay>
                -->
            </GroupBox>
            <GroupBox Grid.Row="0" Grid.Column="3" Margin="2,2,2,2" Header="Panneau de contrôle">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <!-- <ColumnDefinition Width="Auto"/>-->
                        </Grid.ColumnDefinitions>
                        <telerik:RadToggleButton x:Name="_chkArming" Grid.Column="0"  IsChecked="{Binding Path=IsFireworkArmed}" Command="{Binding Path=ArmFireworkCommand}"  VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="45"  Margin="10" Style="{StaticResource RadToggleButtonStyle_OB2}" Content="Armer"   />
                        <Button Style="{StaticResource TriggerStyle}"  Grid.Column="1" Margin="5,5,5,5" Content="Tirer"  Height="50" Width="75" Name="_btnStart" Command="{Binding Path=StartFireworkCommand}"  
                                             telerik:RadToolTipService.Placement="Center"
                                             telerik:RadToolTipService.VerticalOffset="-63"
                                             telerik:RadToolTipService.ToolTipContent="Attention, l'appuie sur ce bouton déclenche le feu d'artifice" >
                            <telerik:RadToolTipService.ToolTipContentTemplate>
                                <DataTemplate>
                                    <telerik:RadToolTipContentView>
                                        <TextBlock Text="{Binding}" />
                                    </telerik:RadToolTipContentView>
                                </DataTemplate>
                            </telerik:RadToolTipService.ToolTipContentTemplate>
                        </Button>
                        <Button Grid.Column="2" Margin="5,5,5,5" Content="Arrêter"  Height="50" Width="75" Name="_btnStop" Command="{Binding Path=StopFireworkCommand}"/>
                        <!-- Used for testing purpose -->
                        <Button  Grid.Column="3" Margin="5,5,5,5" Content="Test RadTimeline" Height="50" Width="75" Name="_btnTest" Click="_btnTest_Click" Visibility="Hidden" />
                        <Button  Grid.Column="4" Margin="5,5,5,5" HorizontalAlignment="Right" Content="Recentrer" Height="50" Width="75" Name="_btnCenter"  Visibility="Visible" Command="{Binding Path=CenterTimeLineCommand}" />
                        <!--<TextBlock Grid.Column="4" Text="{Binding VisiblePeriodStart}"></TextBlock>-->
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" IsChecked="{Binding Path=AutomaticTimelineScroll}" Margin="0,0,10,0" Content="Défilement automatique de la ligne de temps du feu" />
                            <CheckBox Grid.Column="1" IsChecked="{Binding Path=PlaySoundTrack}" IsEnabled="{Binding Path=IsPlaySoundTrackEnabled}" Content="Jouer la bande sonore" />
                        </Grid>
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="1" VerticalAlignment="Stretch">
            <telerik:RadTimeline telerik:StyleManager.Theme="Fluent"                             
                             VerticalScrollBarVisibility="Auto"
                             Name="_fireworkTimeline" 
                             Content="Firework Timeline" 
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             ItemsSource="{Binding FireworkManager.AllActiveFireworks}"
                             PeriodStart= "{Binding FireworkManager.PeriodStartUI}"
                             PeriodEnd="{Binding FireworkManager.PeriodEndUI}"
                             StartPath="RadStart"
                             DurationPath="Duration"                             
                             VisiblePeriodStart="{Binding FireworkManager.DefaultPeriodStartUI}" 
							 VisiblePeriodEnd="{Binding FireworkManager.DefaultPeriodEndUI}"                            
                             TimelineItemTemplate="{StaticResource FireworkLinesTemplate}"
                             SelectionMode="Single"
                             IsSelectionEnabled="True"
                             ScrollMode="ScrollOnly"
                             AutoSort="False"                              
                             SelectionChanged="FireworkTimeline_SelectionChanged">

                <telerik:RadTimeline.ItemRowIndexGenerator>
                    <kQuatreUI:NewLineRowIndexGenerator />
                </telerik:RadTimeline.ItemRowIndexGenerator>

                <!--TODO : 
                Add to set Intervals formatter in code
                See FireworkUserControlViewModel constructor
                Try to understand why this cause a null ref exception -->
                <!-- <telerik:RadTimeline.Intervals>
                    <telerik:MinuteInterval FormatterProvider="{StaticResource MinuteIntervalFormatter}"></telerik:MinuteInterval>
                    <telerik:SecondInterval FormatterProvider="{StaticResource SecondIntervalFormatter}"></telerik:SecondInterval>
                </telerik:RadTimeline.Intervals>
                -->

            </telerik:RadTimeline>
        </Grid>
        <GridSplitter Visibility="{Binding Path=FireworkManager.RescueLines.Count, Converter={StaticResource CountToVisibilityConverter}}" ShowsPreview="True" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" ResizeDirection="Rows" Grid.Row="2" BorderThickness="5" BorderBrush="Black"></GridSplitter>
        <Grid Grid.Row="3">
            <telerik:RadGridView GroupRenderMode="Flat"                                
                                 x:Name="_gvRescueLines"                                 
                                 CanUserGroupColumns="False" 
                                 ShowGroupPanel="False" 
                                 CanUserSortColumns="False" 
                                 CanUserFreezeColumns="False" 
                                 CanUserReorderColumns="False"
                                 ItemsSource="{Binding FireworkManager.AllRescueFireworks}" 
                                 AutoGenerateColumns="False" 
                                 IsReadOnly="True"   
                                 IsFilteringAllowed="False"
                                 GridLinesVisibility="Horizontal"                                
                                 HorizontalGridLinesBrush="#0099BC" 
                                 RowIndicatorVisibility="Collapsed"
                                 telerik:StyleManager.Theme="Fluent">
                <telerik:RadGridView.Columns>
                    <telerik:GridViewDataColumn  Header="Désignation feu de secours"
														DataMemberBinding="{Binding Designation}" Width="Auto" />
                    <telerik:GridViewDataColumn Header="Ligne/Liaison"
														 DataMemberBinding="{Binding SummaryUI}" Width="250" />
                    <telerik:GridViewDataColumn Header="Etat"
														 DataMemberBinding="{Binding StateText}" Width="150" />
                    <telerik:GridViewDataColumn Header="Durée théorique"
														 DataMemberBinding="{Binding DurationText}" Width="150" />
                    <telerik:GridViewDataColumn Header="Durée réalisée"
														 DataMemberBinding="{Binding ElapsedTimeText}" Width="Auto" />
                </telerik:RadGridView.Columns>
            </telerik:RadGridView >

        </Grid>
    </Grid>
</UserControl>
