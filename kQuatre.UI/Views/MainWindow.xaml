<Window  
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"    
        xmlns:ig="http://schemas.infragistics.com/xaml"
        xmlns:Custom="http://infragistics.com/Windows" x:Name="_mainWindow" x:Class="Guiet.kQuatre.UI.Views.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:views="clr-namespace:Guiet.kQuatre.UI.ViewModel"
        xmlns:conv="clr-namespace:Guiet.kQuatre.UI.Converters"
        xmlns:igDP="http://infragistics.com/DataPresenter"
        xmlns:kQuatreUI="clr-namespace:Guiet.kQuatre.UI.Timeline"                
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        mc:Ignorable="d"
        Title="{Binding Title}" Width="1600" WindowState="Maximized" WindowStartupLocation="CenterScreen" Closing="_mainWindow_Closing" Icon="/kQuatre;component/Resources/FireworksIcon.png" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/TimelineDictionary.xaml"/>
                <ResourceDictionary Source="../Resources/ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key = "TriggerStyle" TargetType = "Button">
                <Setter Property = "Foreground" Value = "Black" />
                <Style.Triggers>
                    <Trigger Property = "IsEnabled" Value = "True">
                        <Setter Property = "Background" Value = "Red" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <conv:CountToVisibilityConverter x:Key="CountToVisibilityConverter"></conv:CountToVisibilityConverter>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <ig:XamMenu Grid.Row="0" x:Name="MainMenu" MenuOrientation="Horizontal" HorizontalAlignment="Stretch" Margin="0,1,0.4,0">
            <ig:XamMenuItem Header="Fichier">
                <ig:XamMenuItem Header="Nouveau..." Click="_miNewFirework_Click"/>
                <ig:XamMenuItem x:Name="_miOpenExcel" Header="Ouvrir un fichier Excel..." Click="_miOpenExcel_Click"  />
                <ig:XamMenuItem Name="_miOpenK4" Header="Ouvrir un fichier k4..." Click="_miOpenK4_Click" />
                <ig:XamMenuItem Name="_miSave" Header="Enregistrer..." Click="_miSave_Click" />
                <ig:XamMenuItem Name="_miSaveAs" Header="Enregistrer sous..." Click="_miSaveAs_Click" />
                <ig:XamMenuSeparator/>
                <ig:XamMenuItem Header="Configuration..." Click="XamMenuItem_Click"/>
                <ig:XamMenuSeparator/>
                <ig:XamMenuItem Header="Quitter" Click="_miQuit_Click"/>
            </ig:XamMenuItem>
            <ig:XamMenuItem Header="Artifices">
                <ig:XamMenuItem Name="_miFireworkManagement" Header="Gestion..." Click="_miFireworkManagement_Click"  />
            </ig:XamMenuItem>
            <ig:XamMenuItem Header="Emetteur/Récepteurs">
                <ig:XamMenuItem Header="Gestion..."/>
            </ig:XamMenuItem>
            <ig:XamMenuItem Header="?">
                <ig:XamMenuItem Header="A Propos..."/>
            </ig:XamMenuItem>
        </ig:XamMenu>
        <StatusBar Grid.Row="3" Height="20">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock x:Name="_deviceConnectionInfo" Text="{Binding DeviceConnectionInfo}"/>
            </StatusBarItem>
            <!--<Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2" HorizontalAlignment="Left">
                <TextBlock x:Name="_fireworkSanityStatus" Text="{Binding DeviceConnectionInfo}"/>
            </StatusBarItem>-->
        </StatusBar>
        <Custom:XamTabControl   Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectionChanged="XamTabControl_SelectionChanged">
            <Custom:TabItemEx x:Name="_tabDesign">
                <Custom:TabItemEx.Header>
                    <StackPanel Height="50" Width="60">
                        <Image Source="/kQuatre;component/Resources/IdeaIcon_32x32.png" Height="32" Width="32" />
                        <TextBlock Text="Conception"   HorizontalAlignment="Center" />
                    </StackPanel>
                </Custom:TabItemEx.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="Nom du feu : " />
                        <TextBox Grid.Column="1" Height="20" Width="400" Text="{Binding Path=FireworkManager.Name, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0"  Background="LightGray" />
                        <Border Grid.Row="0" Grid.Column="1"  Background="LightGray" />
                        <Border Grid.Row="0" Grid.Column="2"  Background="LightGray" />
                        <Border Grid.Row="0" Grid.Column="3"  Background="LightGray" />
                        <Button x:Name="_btnAddLine" Width="120" Margin="5,5,5,5" HorizontalAlignment="left" VerticalAlignment="Center" Grid.Column="0" Content="Ajouter une ligne" Click="_btnAddLine_Click" ></Button>
                        <Button x:Name="_btnAlterLine" Width="120" Margin="5,5,5,5" HorizontalAlignment="left" VerticalAlignment="Center"  Grid.Column="1" Content="Modifier une ligne" Click="_btnAlterLine_Click" ></Button>
                        <Button Name="_btnDeleteLine" Width="120" Margin="5,5,5,5" HorizontalAlignment="left" VerticalAlignment="Center" Grid.Column="2" Content="Supprimer une ligne" Click="_btnDeleteLine_Click" ></Button>
                        <Button Name="_btnCheckFirework" Width="120" Margin="5,5,5,5" HorizontalAlignment="left" VerticalAlignment="Center" Grid.Column="3" Content="Vérifier la validité" Click="_btnCheckFirework_Click" ></Button>
                    </Grid>

                    <Grid Grid.Row="2">

                        <Grid.RowDefinitions>
                            <RowDefinition  />
                        </Grid.RowDefinitions>

                        <igDP:XamDataGrid Background="Beige" Width="Auto" Height="Auto" ScrollingMode="Immediate" Name="_fireworkDatagrid"  DataSource="{Binding FireworkManager.AllLines}" HorizontalAlignment="Stretch" SelectedDataItemsScope="RecordsOnly" GroupByAreaLocation="None">
                            <igDP:XamDataGrid.Resources>
                                <Style x:Key="lineRowColorStyle" TargetType="igDP:DataRecordCellArea">
                                    <Setter Property="Background" Value="Gray"/>
                                </Style>
                                <Style x:Key="fireworkRowColorStyle" TargetType="igDP:DataRecordCellArea">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Style>

                                <Style x:Key="lineRecordStyle" TargetType="{x:Type igDP:DataRecordPresenter}">
                                    <Setter Property="Margin" Value="0,10,0,0"/>
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Style>

                                <Style x:Key="fireworkRecordStyle" TargetType="{x:Type igDP:DataRecordPresenter}">
                                    <Setter Property="Margin" Value="30,0,0,0"/>
                                </Style>

                                <Style x:Key="buttonInCellStyle" TargetType="{x:Type igDP:CellValuePresenter}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
                                                <Button Name="_btnAddFirework" Content="Ajouter" Click="_btnAddFirework_Click" FontStyle="Normal" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </igDP:XamDataGrid.Resources>
                            <igDP:XamDataGrid.ViewSettings>
                                <igDP:GridViewSettings/>
                            </igDP:XamDataGrid.ViewSettings>

                            <igDP:XamDataGrid.FieldLayoutSettings>
                                <igDP:FieldLayoutSettings AutoGenerateFields="False"/>
                            </igDP:XamDataGrid.FieldLayoutSettings>

                            <igDP:XamDataGrid.FieldLayouts>
                                <igDP:FieldLayout Key="Line">
                                    <igDP:FieldLayout.Settings>
                                        <igDP:FieldLayoutSettings DataRecordPresenterStyle="{StaticResource lineRecordStyle}" DataRecordCellAreaStyle="{StaticResource lineRowColorStyle}"/>
                                    </igDP:FieldLayout.Settings>
                                    <igDP:FieldLayout.Fields>
                                        <igDP:Field IsReadOnly="True" Width="Auto" Label="Numéro de ligne" Name="NumberUI" />
                                        <igDP:Field IsReadOnly="True" Label="Mise à feu" Name="Ignition" >
                                        </igDP:Field>
                                        <igDP:Field IsReadOnly="True" Label="Liaison" Name="ReceptorAddressUI" Width="250"/>
                                        <igDP:Field IsReadOnly="True" Label="Ligne de secours" Name="IsRescueLineText" Width="150"  />
                                        <igDP:UnboundField Label="Action">
                                            <igDP:Field.Settings>
                                                <igDP:FieldSettings CellValuePresenterStyle="{StaticResource buttonInCellStyle}" />
                                            </igDP:Field.Settings>
                                        </igDP:UnboundField>
                                        <igDP:Field IsReadOnly="True" Name="Fireworks" />
                                    </igDP:FieldLayout.Fields>
                                </igDP:FieldLayout>
                                <igDP:FieldLayout Key="Firework" >
                                    <igDP:FieldLayout.Settings>
                                        <igDP:FieldLayoutSettings  DataRecordPresenterStyle="{StaticResource fireworkRecordStyle}" DataRecordCellAreaStyle="{StaticResource fireworkRowColorStyle}"/>
                                    </igDP:FieldLayout.Settings>
                                    <igDP:FieldLayout.Fields>
                                        <igDP:Field IsReadOnly="True" Label="Référence" Name="Reference" Width="Auto" />
                                        <igDP:Field IsReadOnly="True" Label="Désignation" Name="Designation" Width="Auto" />
                                        <igDP:Field IsReadOnly="True" Label="Durée" Name="Duration" />
                                    </igDP:FieldLayout.Fields>
                                </igDP:FieldLayout>
                            </igDP:XamDataGrid.FieldLayouts>
                        </igDP:XamDataGrid>
                    </Grid>

                </Grid>
            </Custom:TabItemEx>
            <Custom:TabItemEx x:Name="_tabTest">
                <Custom:TabItemEx.Header>
                    <StackPanel Height="50" Width="60">
                        <Image Source="/kQuatre;component/Resources/TestIcon_32x32.png" Height="32" Width="32" />
                        <TextBlock Text="Tests"   HorizontalAlignment="Center" />
                    </StackPanel>
                </Custom:TabItemEx.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Row="0" HorizontalAlignment="Stretch" Margin="10,10,10,10">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold">Récepteur(s) disponible(s)</TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Sélection d'un récepteurs : " HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                            <ComboBox Name="_cbxTestReceptors" Grid.Column="1" Grid.Row="0" SelectedValue="{Binding Path=SelectedTestReceptor}"  DisplayMemberPath="Name" ItemsSource="{Binding Path=FireworkManager.Receptors}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="200" SelectionChanged="_cbxTestReceptors_SelectionChanged"  />
                            <Button Margin="10,0,0,0" Grid.Row="0" Grid.Column="2" x:Name="_btnDoReceptorTest" IsEnabled="{Binding SelectedTestReceptor.IsTestLaunchAllowed,  FallbackValue=false}" Width="120" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Lancer le test" Click="_btnStartTestReceptor_Click" ></Button>
                            <Button Margin="10,0,0,0" Grid.Row="0" Grid.Column="3" x:Name="_btnStopReceptorTest" IsEnabled="{Binding SelectedTestReceptor.IsTestStopAllowed, FallbackValue=false}" Width="120" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Arrêter le test" Click="_btnStopTestReceptor_Click" ></Button>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="1" HorizontalAlignment="Stretch" Margin="10,10,10,10">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold">Test de réception</TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Nb de messages envoyés : " HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                            <Label Grid.Row="0" Grid.Column="1" Content="{Binding Path=SelectedTestReceptor.MessageSentCounter, FallbackValue=NA}"></Label>
                            <Label Grid.Row="1" Grid.Column="0" Content="Message(s) reçu(s) : " HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                            <Label Grid.Row="1" Grid.Column="1"  Content="{Binding Path=SelectedTestReceptor.MessageReceivedCounter, FallbackValue=NA}" Foreground="Green" />
                            <Label Grid.Row="2" Grid.Column="0" Content="Message(s) perdu(s) : " HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                            <Label Grid.Row="2" Grid.Column="1" Content="{Binding Path=SelectedTestReceptor.MessageLostCounter, FallbackValue=NA}" Foreground="Red"></Label>
                            <Label Grid.Row="3" Grid.Column="0" Content="Qualité réception : " HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                            <Label Grid.Row="3" Grid.Column="1" Content="{Binding Path=SelectedTestReceptor.MessageRssi, FallbackValue=NA}"></Label>
                            <Label Grid.Row="3" Grid.Column="2" Content="RSSI (Received Signal Strenght Indicator), plus ce chiffre se rapproche de 0 mieux c'est. Qualité OK si : -100 &lt; RSSI &lt; 0"></Label>
                            <Label Grid.Row="4" Grid.Column="0" Content="Rapport signal sur bruit : " HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                            <Label Grid.Row="4" Grid.Column="1" Content="{Binding Path=SelectedTestReceptor.MessageSnr, FallbackValue=NA}"></Label>
                            <Label Grid.Row="4" Grid.Column="2" Content="SNR (Signal to Noise Ratio)"></Label>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="3" Margin="10,10,10,10">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold">Test de la résistance des canaux du récepteur connecté à une ligne du feu</TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Row="0" Grid.Column="0" Margin="5,5,5,5"  x:Name="_btnDoResistanceTest" IsEnabled="False"  Width="160" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Tester toutes les résistances"></Button>
                                <Button Grid.Row="0" Grid.Column="1" Margin="5,5,5,5"  x:Name="_btnStopResistanceTest" IsEnabled="False" Width="160" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Arrêter le test des résistances" ></Button>
                            </Grid>
                            <Grid Grid.Row="1">
                                <!--DockPanel Margin="10,10,10,10">-->
                                <igDP:XamDataGrid  Name="_receptorChannelsDatagrid" Theme="IGTheme"
                           DataSource="{Binding SelectedTestReceptor.PluggedChannels}"  SelectedDataItemsScope="RecordsOnly" GroupByAreaLocation="None">
                                    <igDP:XamDataGrid.Resources>
                                        <Style x:Key="lineRowColorStyle" TargetType="igDP:DataRecordCellArea">
                                            <Setter Property="Background" Value="Gray"/>
                                        </Style>
                                        <Style x:Key="fireworkRowColorStyle" TargetType="igDP:DataRecordCellArea">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </Style>

                                        <Style x:Key="lineRecordStyle" TargetType="{x:Type igDP:DataRecordPresenter}">
                                            <Setter Property="Margin" Value="0,40,0,0"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </Style>

                                        <Style x:Key="fireworkRecordStyle" TargetType="{x:Type igDP:DataRecordPresenter}">
                                            <Setter Property="Margin" Value="30,0,0,0"/>
                                        </Style>

                                        <Style x:Key="buttonInCellStyle" TargetType="{x:Type igDP:CellValuePresenter}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
                                                        <Button Name="_btnTestResistance" Content="Tester" Click="_btnTestResistance_Click" 
                                                            IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=DataContext.SelectedTestReceptor.IsTestLaunchAllowed,  FallbackValue=false}"                                                            
                                                            FontStyle="Normal" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </igDP:XamDataGrid.Resources>
                                    <igDP:XamDataGrid.FieldLayoutSettings>
                                        <igDP:FieldLayoutSettings AutoGenerateFields="False"/>
                                    </igDP:XamDataGrid.FieldLayoutSettings>

                                    <igDP:XamDataGrid.FieldLayouts>
                                        <igDP:FieldLayout Key="Channels">
                                            <igDP:FieldLayout.Fields>
                                                <igDP:Field IsReadOnly="True" Width="Auto" Label="Numéro de ligne" Name="LineAssociatedNumberUI" />
                                                <igDP:Field IsReadOnly="True" Label="Liaison" Name="ReceptorAddressUI" Width="250"/>
                                                <igDP:Field IsReadOnly="True" Label="Résistance" Name="Resistance" Width="250"/>
                                                <igDP:UnboundField Label="Action">
                                                    <igDP:Field.Settings>
                                                        <igDP:FieldSettings CellValuePresenterStyle="{StaticResource buttonInCellStyle}" />
                                                    </igDP:Field.Settings>
                                                </igDP:UnboundField>
                                            </igDP:FieldLayout.Fields>
                                        </igDP:FieldLayout>
                                    </igDP:XamDataGrid.FieldLayouts>
                                </igDP:XamDataGrid>
                                <!--</DockPanel>-->
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Custom:TabItemEx>
            <Custom:TabItemEx x:Name="_tabFire">
                <Custom:TabItemEx.Header>
                    <StackPanel Height="50" Width="60">
                        <Image Source="/kQuatre;component/Resources/ExecutionIcon_32x32.png" Height="32" Width="32" />
                        <TextBlock Text="Exécution"   HorizontalAlignment="Center" />
                    </StackPanel>
                </Custom:TabItemEx.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <!-- GridSplitter Visibility Collapsed by default -->
                        <RowDefinition Height="Auto"/>
                        <!-- Rescue lines Visibility Collapsed by default -->
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Grid.Row="0" Grid.Column="0" Margin="2,2,2,2" Header="Durée totale du feu">
                            <ig:XamSegmentedDisplay  VerticalAlignment="Center" Margin="10,10,10,10" Text="{Binding FireworkManager.TotalDurationUI}" Name="_segTotalTime" SegmentMode="SevenSegment"
                                    Digits="6" Width="150" Height="50" >
                                <ig:XamSegmentedDisplay.TextForeground>
                                    <RadialGradientBrush>
                                        <GradientStop Color="AliceBlue" Offset="0"/>
                                        <GradientStop Color="#006DF0" Offset="1"/>
                                    </RadialGradientBrush>
                                </ig:XamSegmentedDisplay.TextForeground>
                            </ig:XamSegmentedDisplay>
                        </GroupBox>
                        <GroupBox Grid.Row="0" Grid.Column="1" Margin="2,2,2,2" Header="Temps écoulé">
                            <ig:XamSegmentedDisplay VerticalAlignment="Center" Margin="10,10,10,10" Text="{Binding FireworkManager.ElapsedTimeString}" Name="_segChrono" SegmentMode="SevenSegment"
                                    Digits="6" Width="150" Height="50" >
                                <ig:XamSegmentedDisplay.TextForeground>
                                    <RadialGradientBrush>
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="Lime" Offset="1"/>
                                    </RadialGradientBrush>
                                </ig:XamSegmentedDisplay.TextForeground>
                            </ig:XamSegmentedDisplay>
                        </GroupBox>
                        <GroupBox Grid.Row="0" Grid.Column="2" Margin="2,2,2,2" Header="Prochain tir">
                            <ig:XamSegmentedDisplay VerticalAlignment="Center" Margin="10,10,10,10" Text="{Binding FireworkManager.NextLaunchCountDownString}" Name="_segNextFirework" SegmentMode="SevenSegment"
                                    Digits="6" Width="150" Height="50" >
                                <ig:XamSegmentedDisplay.TextForeground>
                                    <RadialGradientBrush>
                                        <GradientStop Color="OrangeRed" Offset="0"/>
                                        <GradientStop Color="Orange" Offset="1"/>
                                    </RadialGradientBrush>
                                </ig:XamSegmentedDisplay.TextForeground>
                            </ig:XamSegmentedDisplay>
                        </GroupBox>
                        <GroupBox Grid.Row="0" Grid.Column="3" Margin="2,2,2,2" Header="Panneau de contrôle">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <telerik:RadToggleButton x:Name="_chkArming" Grid.Column="0"  IsChecked="{Binding Path=IsFireworkArmed}" IsEnabled="{Binding Path=IsArmingEnable}" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="45"  Margin="10" Style="{StaticResource RadToggleButtonStyle_OB2}" Content="Armer" Checked="_chkArming_Checked" Unchecked="_chkArming_Unchecked" />
                                    <Button Style="{StaticResource TriggerStyle}" IsEnabled="{Binding Path=IsFireFireworkEnable}" Grid.Column="1" Margin="5,5,5,5" Content="Tirer"  Height="50" Width="75" Name="_btnStart" Click="_btnStart_Click" 
                                             telerik:RadToolTipService.Placement="Center"
                                             telerik:RadToolTipService.VerticalOffset="-63"
                                             telerik:RadToolTipService.ToolTipContent="Attention, l'appuie sur ce bouton déclenche le feu d'artifice" >
                                        <telerik:RadToolTipService.ToolTipContentTemplate>
                                            <DataTemplate>
                                                <telerik:RadToolTipContentView>
                                                    <TextBlock Text="{Binding}" />
                                                </telerik:RadToolTipContentView>
                                            </DataTemplate>
                                        </telerik:RadToolTipService.ToolTipContentTemplate>
                                    </Button>
                                    <Button Grid.Column="2" Margin="5,5,5,5" Content="Arrêter" IsEnabled="{Binding Path=IsStopFireworkEnable}" Height="50" Width="75" Name="_btnStop" Click="_btnStop_Click" />
                                    <Button Style="{StaticResource TriggerStyle}" Grid.Column="3" Margin="5,5,5,5" Content="Tirer dernière(s) ligne(s) en échec" IsEnabled="{Binding FireworkManager.IsRedoFailedEnable}" Height="50" Width="180" Name="_btnRedoFailed" Click="_btnRedoFailed_Click" Visibility="Hidden" />
                                    <!--<Button  Grid.Column="1" Margin="5,5,5,5" Content="Test RadTimeline" Height="50" Width="75" Name="_btnTest" Click="_btnTest_Click" />-->
                                </Grid>
                                <CheckBox Grid.Row="1" IsChecked="{Binding Path=AutomaticTimelineScroll}" Content="Défilement automatique de la ligne de temps du feu" />
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Grid Grid.Row="1" VerticalAlignment="Stretch">
                        <telerik:RadTimeline                              
                             VerticalScrollBarVisibility="Auto"
                             Name="_fireworkTimeline" 
                             Content="Firework Timeline" 
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             ItemsSource="{Binding FireworkManager.AllActiveFireworks}"
                             PeriodStart= "{Binding FireworkManager.PeriodStartUI}"
                             PeriodEnd="{Binding FireworkManager.PeriodEndUI}"
                             StartPath="RadStart"
                             DurationPath="Duration"                             
                             VisiblePeriodStart="{Binding FireworkManager.DefaultPeriodStartUI}" 
							 VisiblePeriodEnd="{Binding FireworkManager.DefaultPeriodEndUI}"                            
                             TimelineItemTemplate="{StaticResource FireworkLinesTemplate}"
                             SelectionMode="Single"
                             IsSelectionEnabled="True"
                             ScrollMode="ScrollOnly"
                             AutoSort="False" SelectionChanged="_fireworkTimeline_SelectionChanged">

                            <telerik:RadTimeline.ItemRowIndexGenerator>
                                <kQuatreUI:NewLineRowIndexGenerator />
                            </telerik:RadTimeline.ItemRowIndexGenerator>

                            <telerik:RadTimeline.Intervals>
                                <telerik:MinuteInterval FormatterProvider="{StaticResource MinuteIntervalFormatter}"></telerik:MinuteInterval>
                                <telerik:SecondInterval FormatterProvider="{StaticResource SecondIntervalFormatter}"></telerik:SecondInterval>
                            </telerik:RadTimeline.Intervals>
                        </telerik:RadTimeline>
                    </Grid>
                    <GridSplitter Visibility="{Binding Path=FireworkManager.RescueLines.Count, Converter={StaticResource CountToVisibilityConverter}}" ShowsPreview="True" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" ResizeDirection="Rows" Grid.Row="2" BorderThickness="5" BorderBrush="Black"></GridSplitter>
                    <Grid Grid.Row="3">
                        <igDP:XamDataGrid DataSource="{Binding FireworkManager.AllRescueFireworks}" 
                          ScrollingMode="Immediate"
                          HorizontalAlignment="Stretch" 
                          SelectedDataItemsScope="RecordsOnly" GroupByAreaLocation="None"
                          VerticalAlignment="Stretch"
                          Name="_dgRescueLines" Visibility="{Binding Path=FireworkManager.RescueLines.Count, Converter={StaticResource CountToVisibilityConverter}}">

                            <igDP:XamDataGrid.FieldLayoutSettings>
                                <igDP:FieldLayoutSettings AutoGenerateFields="False"/>
                            </igDP:XamDataGrid.FieldLayoutSettings>

                            <igDP:XamDataGrid.FieldLayouts>
                                <igDP:FieldLayout Key="Firework">
                                    <igDP:FieldLayout.Fields>
                                        <igDP:Field IsReadOnly="True"  Width="Auto" Label="Désignation feu de secours" Name="Designation" />
                                        <igDP:Field IsReadOnly="True" Width="Auto" Label="Ligne/Liaison" Name="SummaryUI" />
                                        <igDP:TextField  IsReadOnly="True" Width="Auto" Label="Etat" Name="StateText">
                                            <!-- Cause a thread problem exception .... -->
                                            <!--<igDP:TextField.CellBindings>
                                                <igDP:CellBinding Property="Foreground"
                                          Target="CellValuePresenter"
                                          Binding="{Binding Path=DataItem.ColorPresentation}" />
                                            </igDP:TextField.CellBindings>-->
                                        </igDP:TextField>
                                    </igDP:FieldLayout.Fields>
                                    <igDP:Field IsReadOnly="True" Width="Auto" Label="Durée théorique" Name="DurationText" />
                                    <igDP:Field IsReadOnly="True" Width="Auto" Label="Durée réalisée" Name="ElapsedTimeText" />
                                </igDP:FieldLayout>
                            </igDP:XamDataGrid.FieldLayouts>

                        </igDP:XamDataGrid>
                    </Grid>
                </Grid>
            </Custom:TabItemEx>

        </Custom:XamTabControl>
    </Grid>
</Window>
