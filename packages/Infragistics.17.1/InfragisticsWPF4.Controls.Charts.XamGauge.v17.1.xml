<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Charts.XamGauge.v17.1</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer">
            <summary>
            The automation peer for the featured measure
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.#ctor(Infragistics.Controls.Charts.FeaturedMeasure)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer"/> class.
            </summary>
            <param name="measure">The measure.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.Measure">
            <summary>
            Gets or sets the measure.
            </summary>
            <value>The measure.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.FeaturedMeasureAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer">
            <summary>
            The automation peer for the comparative measure
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.#ctor(Infragistics.Controls.Charts.ComparativeMeasure)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer"/> class.
            </summary>
            <param name="measure">The measure.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.Measure">
            <summary>
            Gets or sets the measure.
            </summary>
            <value>The measure.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.ComparativeMeasureAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer">
            <summary>
            The automation peer for the gauge
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer"/> class.
            </summary>
            <param name="gauge">The gauge.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer.Gauge">
            <summary>
            Gets or sets the gauge.
            </summary>
            <value>The gauge.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.GaugeAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer">
            <summary>
            The automation peer for the linear gauge bar marker
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.#ctor(Infragistics.Controls.Charts.LinearGaugeBarMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer"/> class.
            </summary>
            <param name="barMarker">The bar marker.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.BarMarker">
            <summary>
            Gets or sets the bar marker.
            </summary>
            <value>The bar marker.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeBarMarkerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer">
            <summary>
            The automation peer for the linear gauge needle
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.#ctor(Infragistics.Controls.Charts.LinearGaugeNeedle)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer"/> class.
            </summary>
            <param name="needle">The needle.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.Needle">
            <summary>
            Gets or sets the needle.
            </summary>
            <value>The needle.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.LargeChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a large change is made, such as with the PAGE DOWN key.
            </summary>
            <value></value>
            <returns>The large-change value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.Minimum">
            <summary>
            Gets the minimum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The minimum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.Maximum">
            <summary>
            Gets the maximum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The maximum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.SmallChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a small change is made, such as with an arrow key.
            </summary>
            <value></value>
            <returns>The small-change value supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.SetValue(System.Double)">
            <summary>
            Sets the value of the control.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.LinearGaugeNeedleAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer">
            <summary>
            The automation peer for the qualitative range
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.#ctor(Infragistics.Controls.Charts.QualitativeRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer"/> class.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.LargeChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a large change is made, such as with the PAGE DOWN key.
            </summary>
            <value></value>
            <returns>The large-change value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.Minimum">
            <summary>
            Gets the minimum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The minimum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.Maximum">
            <summary>
            Gets the maximum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The maximum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.SmallChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a small change is made, such as with an arrow key.
            </summary>
            <value></value>
            <returns>The small-change value supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.SetValue(System.Double)">
            <summary>
            Sets the value of the control.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QualitativeRangeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer">
            <summary>
            The automation peer for the quantitative scale
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer.#ctor(Infragistics.Controls.Charts.QuantitativeScale)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer"/> class.
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.QuantitativeScaleAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer">
            <summary>
            The automation peer for the radial gauge needle
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.#ctor(Infragistics.Controls.Charts.RadialGaugeNeedle)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer"/> class.
            </summary>
            <param name="needle">The needle.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.Needle">
            <summary>
            Gets or sets the needle.
            </summary>
            <value>The needle.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.LargeChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a large change is made, such as with the PAGE DOWN key.
            </summary>
            <value></value>
            <returns>The large-change value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.Minimum">
            <summary>
            Gets the minimum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The minimum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.Maximum">
            <summary>
            Gets the maximum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The maximum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.SmallChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a small change is made, such as with an arrow key.
            </summary>
            <value></value>
            <returns>The small-change value supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.SetValue(System.Double)">
            <summary>
            Sets the value of the control.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.RadialGaugeNeedleAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer">
            <summary>
            The automation peer for the segmented display
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.#ctor(Infragistics.Controls.Charts.XamSegmentedDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer"/> class.
            </summary>
            <param name="segmentedDisplay">The segmented display.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.SegmentedDisplay">
            <summary>
            Gets or sets the segmented display.
            </summary>
            <value>The segmented display.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.SegmentedDisplayAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.BulletGraphLabelGroup">
            <summary>
            Represents a group of labels on a bullet graph.
            </summary>    
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphLabelGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.BulletGraphLabelGroup"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BulletGraphLabelGroup.StringFormat">
            <summary>
            Gets or sets the text string format.
            </summary>
            <value>The text string format.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.BulletGraphLabelGroup.StringFormatProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.BulletGraphLabelGroup.StringFormat"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphLabelGroup.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphLabelGroup.OnLabelStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            LabelStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.BulletGraphTickMark">
            <summary>
            Represents a single tick mark on a bullet graph.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphTickMark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.BulletGraphTickMark"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.BulletGraphTickMarkGroup">
            <summary>
            Represents a group of tick marks on a bullet graph.
            </summary>    
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.BulletGraphTickMarkGroup"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.TickMarkStyle">
            <summary>
            Gets or sets the style applied to each TickMark object created by this TickMarkGroup.
            </summary>
            <value>The tick mark style.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.TickMarkStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.TickMarkStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.LengthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.Length"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.OnLengthChanged(System.Double,System.Double)">
            <summary>
            LengthProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>The thickness.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.ThicknessProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.Thickness"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.OnThicknessChanged(System.Double,System.Double)">
            <summary>
            ThicknessProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.EdgeAlignment">
            <summary>
            Gets or sets along which side of the edge the tick marks are aligned.
            </summary>
            <value>The tick mark position.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.EdgeAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.EdgeAlignment"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BulletGraphTickMarkGroup.OnEdgeAlignmentChanged(Infragistics.Controls.Charts.EdgeAlignment,Infragistics.Controls.Charts.EdgeAlignment)">
            <summary>
            EdgeAlignmentProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ComparativeMeasure">
            <summary>
            Represents a symbol marker that encodes the comparative measure.
            </summary>
            <remarks>
            The symbol marker is less dominant than the primary measure and is encoded 
            as a short line that runs perpendicular to the orientation of the graph.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ComparativeMeasure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ComparativeMeasure"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ComparativeMeasure.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>The thickness.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.ComparativeMeasure.ThicknessProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ComparativeMeasure.Thickness"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ComparativeMeasure.OnThicknessChanged(System.Double,System.Double)">
            <summary>
            ThicknessProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ComparativeMeasure.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.ComparativeMeasure.AnimationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ComparativeMeasure.Animation"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ComparativeMeasure.OnAnimationChanged(Infragistics.Controls.Charts.GaugeAnimation,Infragistics.Controls.Charts.GaugeAnimation)">
            <summary>
            AnimationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ComparativeMeasure.Width">
            <summary>
            Gets or sets the width of a <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
            <value></value>
            <returns>The width of the object, in pixels. 
            The default is <see cref="F:System.Double.NaN"/>. 
            Except for the special <see cref="F:System.Double.NaN"/> value, 
            this value must be equal to or greater than 0. 
            See Remarks for upper bound information.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ComparativeMeasure.Height">
            <summary>
            Gets or sets the suggested height of a <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
            <value></value>
            <returns>The height of the object, in pixels. 
            The default is <see cref="F:System.Double.NaN"/>. 
            Except for the special <see cref="F:System.Double.NaN"/> value, 
            this value must be equal to or greater than 0. 
            See Remarks for upper-bound information.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ComparativeMeasure.OnValueChanged(System.Double,System.Double)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ComparativeMeasure.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.FeaturedMeasure">
            <summary>
            Represents a bar that encodes the primary performance measure.
            </summary>
            <remarks>
            This Bar is normally functions like a bar on a bar graph. 
            Based on the orientation of the scale, the bar runs from right to left or bottom to top.
            An exception is in dealing with negative data, where the orientation of the graph layout 
            can be is reversed.
            Another exception is when the quantitative scale begins at a value greater than zero. 
            In this case the featured measure is encoded as a small rectangle or some custom template.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.FeaturedMeasure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.FeaturedMeasure"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FeaturedMeasure.Thickness">
            <summary>
            Gets or sets the thickness of the marker, when the scale begins 
            at value greater than zero and the featured measure is encoded as a small 
            rectangle or some custom template.
            </summary>       
            <value>The thickness.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.FeaturedMeasure.ThicknessProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.FeaturedMeasure.Thickness"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FeaturedMeasure.OnThicknessChanged(System.Double,System.Double)">
            <summary>
            ThicknessProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FeaturedMeasure.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.FeaturedMeasure.StrokeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.FeaturedMeasure.Stroke"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FeaturedMeasure.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.FeaturedMeasure.AnimationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.FeaturedMeasure.Animation"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FeaturedMeasure.OnAnimationChanged(Infragistics.Controls.Charts.GaugeAnimation,Infragistics.Controls.Charts.GaugeAnimation)">
            <summary>
            AnimationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FeaturedMeasure.Width">
            <summary>
            Gets or sets the width of a <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
            <value></value>
            <returns>The width of the object, in pixels. 
            The default is <see cref="F:System.Double.NaN"/>. 
            Except for the special <see cref="F:System.Double.NaN"/> value, 
            this value must be equal to or greater than 0. 
            See Remarks for upper bound information.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FeaturedMeasure.Height">
            <summary>
            Gets or sets the suggested height of a <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
            <value></value>
            <returns>The height of the object, in pixels. 
            The default is <see cref="F:System.Double.NaN"/>. 
            Except for the special <see cref="F:System.Double.NaN"/> value, 
            this value must be equal to or greater than 0. 
            See Remarks for upper-bound information.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FeaturedMeasure.OnValueChanged(System.Double,System.Double)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FeaturedMeasure.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LabelPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.LabelPanel"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LabelPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LabelPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size used once the element is arranged.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.QualitativeRange">
            <summary>
            Represents a qualitative region. The range is a rectangle of fill color.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QualitativeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.QualitativeRange"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QualitativeRange.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.QuantitativeScale">
            <summary>
            Represents quantitative scale on a two dimensional X/Y graph. The scale includes a number of
            sub-elements, including tick marks, tick labels and qualitative ranges.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.MaximumAxisIntervals">
            <summary>
            Maximum intervals per 200 pixels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.QuantitativeScale"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.BackgroundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.Background"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.Minimum">
            <summary>
            Gets or sets the minimum of the scale.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.Minimum"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.Maximum">
            <summary>
            Gets or sets the maximum  of the scale.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.Maximum"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.TickMarkGroup">
            <summary>
            Gets or sets the tick mark group.
            </summary>
            <value>The tick mark group.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.TickMarkGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.TickMarkGroup"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.LabelGroup">
            <summary>
            Gets or sets the label group.
            </summary>
            <value>The label group.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.LabelGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.LabelGroup"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.Ranges">
            <summary>
            Gets or sets the qualitative ranges that the scale contains.
            </summary>
            <value>The ranges.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.RangesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.Ranges"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.QuantitativeScale.AnimationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.QuantitativeScale.Animation"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnAnimationChanged(Infragistics.Controls.Charts.GaugeAnimation,Infragistics.Controls.Charts.GaugeAnimation)">
            <summary>
            AnimationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.QuantitativeScale.ActualInterval">
            <summary>
            Gets the actual interval.
            </summary>
            <value>The actual interval.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnIsReversedChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnIntervalChanged(System.Double,System.Double)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.InvalidateElements">
            <summary>
            Invalidates the elements.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.QuantitativeScale.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamBulletGraph">
            <summary>
            The Infragistics bullet graph control.
            </summary>
            <remarks>
            A Bullet Graph is a variation of a bar graph which is intended to provide a simple and 
            concise view of a primary measure compared against one or more other measures.
            </remarks>    
        </member>
        <member name="M:Infragistics.Controls.Charts.XamBulletGraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.XamBulletGraph"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamBulletGraph.InnerMargin">
            <summary>
            Gets or sets the inner margin.
            </summary>
            <value>The inner margin.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamBulletGraph.InnerMarginProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamBulletGraph.InnerMargin"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamBulletGraph.Scale">
            <summary>
            Gets or sets the quantitive scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamBulletGraph.ScaleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamBulletGraph.Scale"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamBulletGraph.OnScaleChanged(Infragistics.Controls.Charts.QuantitativeScale,Infragistics.Controls.Charts.QuantitativeScale)">
            <summary>
            ScaleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamBulletGraph.ComparativeMeasures">
            <summary>
            Gets or sets the comparative measures.
            </summary>
            <value>The comparative measures.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamBulletGraph.ComparativeMeasuresProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamBulletGraph.ComparativeMeasures"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamBulletGraph.FeaturedMeasures">
            <summary>
            Gets or sets the featured measures.
            </summary>
            <value>The featured measures.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamBulletGraph.FeaturedMeasuresProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamBulletGraph.FeaturedMeasures"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamBulletGraph.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal
            processes (such as a rebuilding layout pass) 
            call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamBulletGraph.MeasureOverride(System.Windows.Size)">
            <summary>
            Method overridden to provide a default height and width.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamBulletGraph.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamBulletGraph.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.EdgeAlignment">
            <summary>
            Specifies along which side of the edge the element is aligned.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EdgeAlignment.OuterSide">
            <summary>
            Aligned to the outer side of the edge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EdgeAlignment.InnerSide">
            <summary>
            Aligned to the inner side of the edge.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeAnimation">
            <summary>
            Represents an gauge animation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeAnimation"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeAnimation.DurationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeAnimation.Duration"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeAnimation.Duration">
            <summary>
            Gets or sets the length of time for which this timeline plays, not counting repetitions.
            </summary>
            <seealso cref="F:Infragistics.Controls.Charts.GaugeAnimation.DurationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeAnimation.EasingFunction">
            <summary>
            Gets or sets the easing function.
            </summary>
            <value>The easing function.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeAnimation.EasingFunctionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeAnimation.EasingFunction"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeAnimation.CreateDoubleAnimation">
            <summary>
            Creates the double animation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeBarMarkerBase">
            <summary>
            Base class that represents a bar element which can point to a value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeBarMarkerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeBarMarkerBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeBarMarkerBase.Value">
            <summary>
            Gets or sets the numeric value this marker should point to on the scale.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeBarMarkerBase.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeBarMarkerBase.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeBarMarkerBase.OnValueChanged(System.Double,System.Double)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeBarMarkerBase.StartExtent">
            <summary>
            The start location of the marker, expressed as a value between 0 and 1 
            relative to the breadth of the scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeBarMarkerBase.StartExtentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeBarMarkerBase.StartExtent"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeBarMarkerBase.OnStartExtentChanged(System.Double,System.Double)">
            <summary>
            StartExtentProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeBarMarkerBase.EndExtent">
            <summary>
            The end location of the marker, expressed as a value between 0 and 1 
            relative to the breadth of the scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeBarMarkerBase.EndExtentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeBarMarkerBase.EndExtent"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeBarMarkerBase.OnEndExtentChanged(System.Double,System.Double)">
            <summary>
            EndExtentProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.GaugeBarMarkerBase.ValueChanged">
            <summary>
            Event raised when the marker's value is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeBarMarkerBase.OnValueChanged">
            <summary>
            Method invoked when the marker's value is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeLabelGroupBase">
            <summary>
            Base class that represents a group of labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeLabelGroupBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeLabelGroupBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeLabelGroupBase.LabelStyle">
            <summary>
            Style applied to each Label object created by this LabelGroup.
            </summary>
            <value>The label style.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeLabelGroupBase.LabelStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeLabelGroupBase.LabelStyle"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeLabelGroupBase.OnLabelStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            LabelStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeLabelGroupBase.Interval">
            <summary>
            Gets or sets the interval between two neighboring labels in this group.
            If the interval is 0, it is automatically calculated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeLabelGroupBase.IntervalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeLabelGroupBase.Interval"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeLabelGroupBase.OnIntervalChanged(System.Double,System.Double)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeLabelGroupBase.RootElement">
            <summary>
            The ContentPresenter in the Template for this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeLabelGroupBase.OnApplyTemplate">
            <summary>
            Overridden to store the RootElement ContentPresenter and populate it with labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeLabelGroupBase.Invalidate">
            <summary>
            Forces a complete redraw of elements in this LabelGroup.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeNeedleBase">
            <summary>
            Base class that represents a needle element which can point to a value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeNeedleBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeNeedleBase.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeNeedleBase.StrokeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeNeedleBase.Stroke"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeNeedleBase.AllowDrag">
            <summary>
            Gets or sets a value indicating whether this element should accept mouse drag operations.
            </summary>
            <value><c>true</c> if should accept mouse drag operations; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeNeedleBase.AllowDragProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeNeedleBase.AllowDrag"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeNeedleBase.Value">
            <summary>
            Gets or sets the numeric value this marker should point to on the scale.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeNeedleBase.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeNeedleBase.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnValueChanged(System.Double,System.Double)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeNeedleBase.StartExtent">
            <summary>
            The start location of the needle, expressed as a value between 0 and 1 relative to the breadth of the scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeNeedleBase.StartExtentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeNeedleBase.StartExtent"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnStartExtentChanged(System.Double,System.Double)">
            <summary>
            StartExtentProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeNeedleBase.EndExtent">
            <summary>
            The end location of the needle, expressed as a value between 0 and 1 relative to the breadth of the scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeNeedleBase.EndExtentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeNeedleBase.EndExtent"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnEndExtentChanged(System.Double,System.Double)">
            <summary>
            EndExtentProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.GaugeNeedleBase.ValueChanged">
            <summary>
            Event raised when the needle's Value is changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeNeedleBase.IsDragging">
            <summary>
            Gets a value indicating whether this instance is dragging.
            </summary>
            <value>
            	<c>true</c> if this instance is dragging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeNeedleBase.OnValueChanged">
            <summary>
            Method invoked when the needle's Value is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeScaleBase">
            <summary>
            Base class that represents a scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeScaleBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeScaleBase.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeScaleBase.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeScaleBase.Orientation"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeScaleBase.IsReversed">
            <summary>
            Gets or sets a value indicating whether the scale is reversed.
            </summary>
            <value>
            	<c>true</c> if the scale is reversed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeScaleBase.IsReversedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeScaleBase.IsReversed"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.OnIsReversedChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeScaleBase.Interval">
            <summary>
            Gets or sets the interval between two neighboring labels and tick marks.
            If the interval is 0, it is automatically calculated.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeScaleBase.IntervalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeScaleBase.Interval"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.OnIntervalChanged(System.Double,System.Double)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeScaleBase.ActualInterval">
            <summary>
            Gets the actual interval.
            </summary>
            <value>The actual interval.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeScaleBase.RootElement">
            <summary>
            The main Grid in the Template for this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.Draw(System.Windows.Controls.Grid)">
            <summary>
            Adds visuals to the given Grid.
            </summary>
            <param name="scalesContainer">The Grid to draw this gauge scale inside.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.InvalidateElements">
            <summary>
            Invalidates the elements.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.Map(System.Double)">
            <summary>
            Returns the angle at which the given value should be located on this scale.
            </summary>
            <param name="value">The value under observation.</param>
            <returns>The angle at which the given value should be located on this scale.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.MapInverse(System.Windows.Point)">
            <summary>
            Returns the numeric value associated with a point on this scale.
            </summary>
            <param name="point">The point under observation.</param>
            <returns>The numeric value associated with the given point on this scale.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleBase.MapInverse(System.Double)">
            <summary>
            Returns the numeric value associated with an coordinate on this scale.
            </summary>
            <param name="loc">The coordinate under observation; this should be an x-coordinate for horizontal gauges and a y-coordinate for vertical gauges.</param>
            <returns>The numeric value associated with the given coordinate on this scale.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeScaleElement">
            <summary>
            Base class for elements on a gauge scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeScaleElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeScaleElement"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeScaleElement.Scale">
            <summary>
            The scale upon which this element appears.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeTickMarkGroupBase">
            <summary>
            Base class that represents a group of tickmarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GaugeTickMarkGroupBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.StrokeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.Stroke"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.Interval">
            <summary>
            Gets or sets the interval between two neighboring tick marks in this group.
            If the interval is 0, it is automatically calculated.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.IntervalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.Interval"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.OnIntervalChanged(System.Double,System.Double)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.RootElement">
            <summary>
            The ContentPresenter in the Template for this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application 
            code or internal processes (such as a rebuilding layout pass)
            call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeTickMarkGroupBase.Invalidate">
            <summary>
            Forces a complete redraw of elements in this LabelGroup.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FourteenSegmentDigit">
            <summary>
            A SegmentedDigit with fourteen segments.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FourteenSegmentDigit.#ctor">
            <summary>
            FourteenSegmentDigit constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FourteenSegmentDigit.OnApplyTemplate">
            <summary>
            Overridden to store the template parts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FourteenSegmentDigit.GetProgram(System.Char)">
            <summary>
            Gets the SegmentProgram for the given text character.
            </summary>
            <param name="value">The character to get a SegmentProgram for.</param>
            <returns>The SegmentProgram for the given text character.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.SegmentedDigit">
            <summary>
            Represents a digit or character on a XamSegmentedDisplay control.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram">
            <summary>
            Enumeration used to identify segments and combinations thereof in a SegmentedDigit.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.None">
            <summary>
            No lit segments.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.Top">
            <summary>
            Top segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.Middle">
            <summary>
            Middle segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.Bottom">
            <summary>
            Bottom segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.LeftTop">
            <summary>
            LeftTop segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.RightTop">
            <summary>
            RightTop segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.LeftBottom">
            <summary>
            LeftBottom segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.RightBottom">
            <summary>
            RightBottom segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.LeftBottomDiagonal">
            <summary>
            LeftBottomDiagonal segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.RightTopDiagonal">
            <summary>
            RightTopDiagonal segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.CenterLeft">
            <summary>
            CenterLeft segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.CenterRight">
            <summary>
            CenterRight segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.CenterTop">
            <summary>
            CenterTop segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.CenterBottom">
            <summary>
            CenterBottom segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.RightBottomDiagonal">
            <summary>
            RightBottomDiagonal segment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.SegmentProgram.LeftTopDiagonal">
            <summary>
            LeftTopDiagonal segment.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SegmentedDigit.#ctor">
            <summary>
            SegmentedDigit constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SegmentedDigit.MeasureOverride(System.Windows.Size)">
            <summary>
            Method overridden to select an appropriate aspect ratio for each digit.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.SegmentedDigit.PropertyChanged">
            <summary>
            Method invoked whenever a property is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SegmentedDigit.OnApplyTemplate">
            <summary>
            Overridden to store the template parts as fields.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.Value">
            <summary>
            The character of text which this SegmentedDigit should represent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.TrailingDecimal">
            <summary>
            Determines whether or not this SegmentedDigit should be followed by a decimal point.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.TrailingDecimalProperty">
            <summary>
            Identifies the TrailingDecimal dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.TrailingColonProperty">
            <summary>
            Identifies the TrailingColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.TrailingColon">
            <summary>
            Determines whether or not this SegmentedDigit should be followed by a colon character.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.TextForegroundUnlit">
            <summary>
            The fill brush of segments that are not part of the character being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.TextForegroundUnlitProperty">
            <summary>
            Identifies the TextForegroundUnlit dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.TextForegroundUnlitBinding">
            <summary>
            A binding to the TextForegroundUnlit property of this control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.TextForeground">
            <summary>
            The fill brush of segments that are part of the character being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentedDigit.TextForegroundProperty">
            <summary>
            Identifies the TextForeground dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.TextForegroundBinding">
            <summary>
            A binding to the TextForeground property of this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SegmentedDigit.GetProgram(System.Char)">
            <summary>
            Gets the SegmentProgram for the given text character.
            </summary>
            <param name="value">The character to get a SegmentProgram for.</param>
            <returns>The SegmentProgram for the given text character.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SegmentedDigit.UpdateElements">
            <summary>
            Updates the display to reflect the current settings for character to display and brushes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementTop">
            <summary>
            The top shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementMiddle">
            <summary>
            The middle shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementBottom">
            <summary>
            The bottom shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementLeftTop">
            <summary>
            The left/top shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementRightTop">
            <summary>
            The right/top shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementLeftBottom">
            <summary>
            The left/bottom shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementRightBottom">
            <summary>
            The right/bottom shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementLeftBottomDiagonal">
            <summary>
            The diagonal left/bottom shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementRightTopDiagonal">
            <summary>
            The diagonal right/top shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementCenterLeft">
            <summary>
            The center/left shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementCenterRight">
            <summary>
            The center/right shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementCenterTop">
            <summary>
            The center/top shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementCenterBottom">
            <summary>
            The center/bottom shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementRightBottomDiagonal">
            <summary>
            The diagonal right/bottom shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SegmentedDigit.ElementLeftTopDiagonal">
            <summary>
            the diagonal left/top shape.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SegmentMode">
            <summary>
            Enumeration describing different character display modes on the XamSegmentedDisplay.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentMode.SevenSegment">
            <summary>
            Characters should be displayed using seven segments.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SegmentMode.FourteenSegment">
            <summary>
            Characters should be displayed using fourteen segments.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SevenSegmentDigit">
            <summary>
            A SegmentedDigit with seven segments.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SevenSegmentDigit.#ctor">
            <summary>
            SevenSegmentDigit constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SevenSegmentDigit.OnApplyTemplate">
            <summary>
            Overridden to store the template parts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SevenSegmentDigit.GetProgram(System.Char)">
            <summary>
            Gets the SegmentProgram for the given text character.
            </summary>
            <param name="value">The character to get a SegmentProgram for.</param>
            <returns>The SegmentProgram for the given text character.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamSegmentedDisplay">
            <summary>
            The Infragistics segmented display control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.#ctor">
            <summary>
            XamSegmentedDisplay constructor.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamSegmentedDisplay.PropertyChanged">
            <summary>
            Event raised whenever a property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.OnApplyTemplate">
            <summary>
            Overridden to store the template parts.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamSegmentedDisplay.SegmentMode">
            <summary>
            Sets or gets the current gauge's segment mode.
            <para>This is a dependency property</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamSegmentedDisplay.SegmentModeProperty">
            <summary>
            Identifies the SegmentMode dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.OnSegmentModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the SegmentMode property has changed on a XamSegmentedDisplay.
            </summary>
            <param name="d">The XamSegmentedDisplay on which the SegmentMode property has changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamSegmentedDisplay.Digits">
            <summary>
            Sets or gets the current gauge's number of digits.
            <para>This is a dependency property</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamSegmentedDisplay.DigitsProperty">
            <summary>
            Identifies the Digits dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.OnDigitsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the Digits property has changed on a XamSegmentedDisplay.
            </summary>
            <param name="sender">The XamSegmentedDisplay on which the Digits property has changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamSegmentedDisplay.TextForegroundUnlit">
            <summary>
            Sets or gets the current gauge's text foreground unlit brush.
            <para>This is a dependency property</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamSegmentedDisplay.TextForegroundUnlitProperty">
            <summary>
            Identifies the TextForegroundUnlit dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamSegmentedDisplay.TextForeground">
            <summary>
            Sets or gets the current gauge's text foreground brush.
            <para>This is a dependency property</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamSegmentedDisplay.TextForegroundProperty">
            <summary>
            Identifies the TextForeground dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamSegmentedDisplay.Text">
            <summary>
            Sets or gets the current gauge's text.
            <para>This is a dependency property</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamSegmentedDisplay.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamSegmentedDisplay.DigitStyle">
            <summary>
            Sets or gets the current gauge's digit style.
            <para>This is a dependency property</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamSegmentedDisplay.DigitStyleProperty">
            <summary>
            Identifies the DigitStyle dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamSegmentedDisplay.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.GaugeMarkerResponse">
            <summary>
            Class with settings which affect the rate of response for a gauge marker when its value is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeMarkerResponse.#ctor">
            <summary>
            GaugeMarkerResponse constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeMarkerResponse.ResponseTimeProperty">
            <summary>
            Identifies the ResponseTime dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeMarkerResponse.ResponseTime">
            <summary>
            The amount of time it should take the gauge marker to traverse from the scale's StartValue to its EndValue.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GaugeMarkerResponse.EnabledProperty">
            <summary>
            Identifies the Enabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeMarkerResponse.Enabled">
            <summary>
            Determines whether or not these response settings should be applied to the marker.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GaugeMarkerResponse.OnValueChanged">
            <summary>
            Method invoked when the value of the response is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.GaugeMarkerResponse.ValueChanged">
            <summary>
            Event raised when the value of the response is changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GaugeMarkerResponse.RefreshRate">
            <summary>
            Rate at which the gauge marker should refresh and be updated to a new value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LabelAddingEventArgs">
            <summary>
            EventArgs class for LabelAdding events.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LabelAddingEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            LabelAddingEventArgs constructor.
            </summary>
            <param name="text">The text to display on the label.</param>
            <param name="context">Information related to the context of the label being added.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LabelAddingEventArgs.Text">
            <summary>
            Gets/Sets the text to display on the label.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LabelAddingEventArgs.Context">
            <summary>
            Dictionary containing information related to the context of the label being added.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeBarMarker">
            <summary>
            Bar element which can point to a value on a linear gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeBarMarker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.LinearGaugeBarMarker"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeBarMarker.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.
            Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeBarMarker.ZIndexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeBarMarker.ZIndex"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeBarMarker.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeBarMarker.StrokeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeBarMarker.Stroke"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeBarMarker.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeLabelGroup">
            <summary>
            Represents a group of labels on a linear gauge scale.
            </summary>       
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeLabelGroup.#ctor">
            <summary>
            LinearGaugeLabelGroup constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeLabelGroup.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.
            Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeLabelGroup.ZIndexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeLabelGroup.ZIndex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeLabelGroup.ExtentProperty">
            <summary>
            Identifies the Extent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeLabelGroup.Extent">
            <summary>
            The center location of each label on the scale, relative to the breadth of the scale; expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeLabelGroup.PreTerminalProperty">
            <summary>
            Identifies the PreTerminal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeLabelGroup.PreTerminal">
            <summary>
            Numeric value to stop adding labels, subtracted from the scale's EndValue.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeLabelGroup.PostInitialProperty">
            <summary>
            Identifies the PostInitial dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeLabelGroup.PostInitial">
            <summary>
            Numeric value to start adding labels, added to the scale's StartValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeLabelGroup.OnLabelAdding(Infragistics.Controls.Charts.LabelAddingEventArgs)">
            <summary>
            Method invoked when a label is being added from this LabelGroup.
            </summary>
            <param name="args">Contextual information about the label being added.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeNeedle">
            <summary>
            A needle element which can point to a value on a linear gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeNeedle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.LinearGaugeNeedle"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeNeedle.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.
            Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeNeedle.ZIndexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeNeedle.ZIndex"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeNeedle.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeNeedle.Response">
            <summary>
            Contains settings which affect the visual response to changes in the needle's Value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeRange">
            <summary>
            Represents a range indicator to be displayed over a portion of a linear gauge scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeRange.#ctor">
            <summary>
            LinearGaugeRange constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.StartValueProperty">
            <summary>
            Identifies the StartValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.StartValue">
            <summary>
            Numeric value on the scale which this range indicator should start at.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.EndValueProperty">
            <summary>
            Identifies the EndValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.EndValue">
            <summary>
            Numeric value on this scale which this range indicator should end at.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.OuterExtentProperty">
            <summary>
            Identifies the OuterExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.OuterExtent">
            <summary>
            Outer location of this range, relative to the breadth of the scale, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.InnerExtentStartProperty">
            <summary>
            Identifies the InnerExtentStart dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.InnerExtentStart">
            <summary>
            Inner start location of this range, relative to the breadth of the scale, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.InnerExtentEndProperty">
            <summary>
            Identifies the InnerExtentEnd dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.InnerExtentEnd">
            <summary>
            Inner end location of this range, relative to the breadth of the scale, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.Fill">
            <summary>
            Fill brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.Stroke">
            <summary>
            Stroke brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeRange.ZIndexProperty">
            <summary>
            Identifies the ZIndex dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeRange.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.  Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LinearGaugeRange.PropertyChanged">
            <summary>
            Event raised when a property is changed on this range.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeScale">
            <summary>
            Class for scales within a linear gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.#ctor">
            <summary>
            LinearGaugeScale constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.StartValue">
            <summary>
            Numeric value at which this scale begins.
            </summary>
            <value>The start value.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.StartValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.StartValue"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.OnStartValueChanged(System.Double,System.Double)">
            <summary>
            StartValueProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.EndValue">
            <summary>
            Numeric value at which this scale ends.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.EndValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.EndValue"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.OnEndValueChanged(System.Double,System.Double)">
            <summary>
            EndValueProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.
            Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.ZIndexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.ZIndex"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.BarMarkers">
            <summary>
            The collection of LinearGaugeBarMarkers within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.BarMarkersProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.BarMarkers"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.Needles">
            <summary>
            The collection of LinearGaugeNeedles within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.NeedlesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.Needles"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.TickMarkGroups">
            <summary>
            The collection of LinearGaugeTickMarkGroups within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.TickMarkGroupsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.TickMarkGroups"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.LabelGroups">
            <summary>
            The collection of LinearGaugeLabelGroups within this scale.
            </summary>
            <value>The label groups.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.LabelGroupsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.LabelGroups"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.Ranges">
            <summary>
            The collection of LinearGaugeRanges within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeScale.RangesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeScale.Ranges"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeScale.ActualInterval">
            <summary>
            Gets the actual interval.
            </summary>
            <value>The actual interval.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.OnIsReversedChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.OnIntervalChanged(System.Double,System.Double)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.InvalidateElements">
            <summary>
            Invalidates the elements.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeScale.RootSizeChanged">
            <summary>
            Called when the root element size is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeTickMark">
            <summary>
            Represents a single tickmark on a linear gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeTickMark.#ctor">
            <summary>
            LinearGaugeTickMark constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup">
            <summary>
            Represents a group of tickmarks on a linear gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.#ctor">
            <summary>
            LinearGaugeTickMarkGroup constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.
            Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.ZIndexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.ZIndex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.StartExtentProperty">
            <summary>
            Identifies the StartExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.StartExtent">
            <summary>
            Start location of tickmarks in this group, relative to the breadth of the gauge, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.EndExtentProperty">
            <summary>
            Identifies the EndExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.EndExtent">
            <summary>
            End location of tickmarks in this group, relative to the breadth of the gauge, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.PreTerminalProperty">
            <summary>
            Identifies the PreTerminal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.PreTerminal">
            <summary>
            Numeric value to stop adding tickmarks, subtracted from the scale's EndValue.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.PostInitialProperty">
            <summary>
            Identifies the PostInitial dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.PostInitial">
            <summary>
            Numeric value to start adding tickmarks, added to the scale's StartValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked when a property is changed.  This method will raise the PropertyChanged event.
            </summary>
            <param name="e">The PropertyChangedEventArgs in context.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.TickMarkStyleProperty">
            <summary>
            Identifies the TickMarkStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearGaugeTickMarkGroup.TickMarkStyle">
            <summary>
            Style applied to each TickMark object created by this TickMarkGroup.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamLinearGauge">
            <summary>
            The Infragistics linear gauge control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamLinearGauge.#ctor">
            <summary>
            XamLinearGauge constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamLinearGauge.Scales">
            <summary>
            Collection of LinearGaugeScales within this gauge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamLinearGauge.ScalesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamLinearGauge.Scales"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamLinearGauge.InnerMarginProperty">
            <summary>
            Identifies the InnerMargin dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamLinearGauge.InnerMargin">
            <summary>
            Margin applied between the control bounds and the scales' bounds.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamLinearGauge.LabelAdding">
            <summary>
            Event raised whenever a label is added to this gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamLinearGauge.OnApplyTemplate">
            <summary>
            Method overridden to store the RootElement ContentPresenter from the ControlTemplate, so it can be populated with visuals created by the gauge control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamLinearGauge.MeasureOverride(System.Windows.Size)">
            <summary>
            Method overridden to provide a default height and width.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamLinearGauge.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamLinearGauge.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamLinearGauge.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Label">
            <summary>
            Identifies a label on a gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Label.#ctor">
            <summary>
            Label constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Label.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Label.Text">
            <summary>
            The text to display on this label.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeLabelGroup">
            <summary>
            Represents a group of labels on a radial gauge scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeLabelGroup.OnLabelAdding(Infragistics.Controls.Charts.LabelAddingEventArgs)">
            <summary>
            Invoked whenever a label is being added by this LabelGroup.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeLabelGroup.#ctor">
            <summary>
            RadialGaugeLabelGroup constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeLabelGroup.Invalidate">
            <summary>
            Forces a complete redraw of elements in this LabelGroup.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeLabelGroup.ExtentProperty">
            <summary>
            Identifies the Extent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeLabelGroup.Extent">
            <summary>
            The center location of each label on the scale, relative to the center and surface of a circle inscribed in the gauge bounds; expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeLabelGroup.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeLabelGroup.Interval">
            <summary>
            Numeric frequency at which to print labels in this group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeLabelGroup.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeLabelGroup.Orientation">
            <summary>
            Determines the angle of rotation for labels in this group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeLabelGroup.PostInitialProperty">
            <summary>
            Identifies the PostInitial dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeLabelGroup.PostInitial">
            <summary>
            Numeric value to start adding labels, added to the scale's StartValue.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeLabelGroup.PreTerminalProperty">
            <summary>
            Identifies the PreTerminal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeLabelGroup.PreTerminal">
            <summary>
            Numeric value to stop adding labels, subtracted from the scale's EndValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeLabelGroup.OnApplyTemplate">
            <summary>
            Overridden to store the RootElement ContentPresenter and populate it with labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeLabelGroup.LabelStyleProperty">
            <summary>
            Identifies the LabelStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeLabelGroup.LabelStyle">
            <summary>
            Style applied to each Label object created by this LabelGroup.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeNeedle">
            <summary>
            A needle element which can point to a value on a radial gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.OnApplyTemplate">
            <summary>
            Invoked whenever application or framework code calls ApplyTemplate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.StartExtentProperty">
            <summary>
            Identifies the StartExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.StartExtent">
            <summary>
            The start location of the needle, expressed as a value between 0 and 1, relative to the center and surface of a circle inscribed within the gauge bounds.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.EndExtentProperty">
            <summary>
            Identifies the EndExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.EndExtent">
            <summary>
            The end location of the needle, expressed as a value between 0 and 1, relative to the center and surface of a circle inscribed within the gauge bounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.Response">
            <summary>
            Contains settings which affect the visual response to changes in the needle's Value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.#ctor">
            <summary>
            RadialGaugeNeedle constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.Scale">
            <summary>
            The scale upon which this needle is being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.AllowDragProperty">
            <summary>
            Identifies the AllowDrag dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.AllowDrag">
            <summary>
            Gets/Sets whether the needle should accept mouse drag operations.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.Value">
            <summary>
            The numeric value this needle should point to on the scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.OnValueChanged">
            <summary>
            Method invoked when the needle's value is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.RadialGaugeNeedle.ValueChanged">
            <summary>
            Event raised when the needle's value is changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.Stroke">
            <summary>
            Stroke brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.StrokeThickness">
            <summary>
            Stroke thickness.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeNeedle.InverseBrushRotationProperty">
            <summary>
            Identifies the InverseBrushRotation property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeNeedle.InverseBrushRotation">
            <summary>
            Whether or not to apply a RotateTransform inverse from the needle's current rotation.  This is useful when using a gradient brush to simulate a light source on the gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeNeedle.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeRange">
            <summary>
            Represents a range indicator to be displayed over a portion of a radial gauge scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.RadialGaugeRange"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.StartValueProperty">
            <summary>
            Identifies the StartValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.StartValue">
            <summary>
            Gets or setsa value on the scale which this range indicator should start at.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.EndValueProperty">
            <summary>
            Identifies the EndValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.EndValue">
            <summary>
            Gets or sets a numeric value on this scale which this range indicator should end at.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.OuterExtentProperty">
            <summary>
            Identifies the OuterExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.OuterExtent">
            <summary>
            Gets or sets outer location of this range, relative to the center and surface of the circular gauge bounds, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.InnerExtentStartProperty">
            <summary>
            Identifies the InnerExtentStart dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.InnerExtentStart">
            <summary>
            Gets or sets Inner start location of this range, relative to the center and surface of the circular gauge bounds, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.InnerExtentEndProperty">
            <summary>
            Identifies the InnerExtentEnd dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.InnerExtentEnd">
            <summary>
            Gets or sets inner end location of this range, relative to the center and surface of the circular gauge bounds, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.Fill">
            <summary>
            Gets or sets fill brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.Stroke">
            <summary>
            Gets or sets stroke brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeRange.ZIndexProperty">
            <summary>
            Identifies the ZIndex dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeRange.ZIndex">
            <summary>
            Gets or sets a number indicating the closeness of the element to the viewer's perspective.  Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeRange.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeRange.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.RadialGaugeRange.PropertyChanged">
            <summary>
            Event raised when a property is changed on this range.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeScale">
            <summary>
            Class for scales within a radial gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeScale.#ctor">
            <summary>
            RadialGaugeScale constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.Needles">
            <summary>
            The collection of RadialGaugeNeedles within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.NeedlesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.RadialGaugeScale.Needles"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.TickMarkGroups">
            <summary>
            This collection of RadialGaugeTickMarkGroups within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.TickMarkGroupsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.RadialGaugeScale.TickMarkGroups"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.LabelGroups">
            <summary>
            The collection of RadialGaugeLabelGroups within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.LabelGroupsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.RadialGaugeScale.LabelGroups"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.Ranges">
            <summary>
            The collection of RadialGaugeRanges within this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.RangesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.RadialGaugeScale.Ranges"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.StartValueProperty">
            <summary>
            Identifies the StartValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.StartValue">
            <summary>
            Numeric value at which this scale begins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.EndValueProperty">
            <summary>
            Identifies the EndValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.EndValue">
            <summary>
            Numeric value at which this scale ends.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.StartAngle">
            <summary>
            Angle at which this scale begins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.EndAngleProperty">
            <summary>
            Identifies the EndAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.EndAngle">
            <summary>
            Angle at which this scale ends.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.Interval">
            <summary>
            Gets or sets the interval between two neighboring labels and tick marks.
            If the interval is 0, it is automatically calculated.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScale.IntervalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.RadialGaugeScale.Interval"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeScale.OnIntervalChanged(System.Double,System.Double)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.ActualInterval">
            <summary>
            Gets the actual interval.
            </summary>
            <value>The actual interval.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScale.RootElement">
            <summary>
            The main Grid in the Template for this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeScale.Draw(System.Windows.Controls.Grid)">
            <summary>
            Renders this scale to the given container.
            </summary>
            <param name="scalesContainer">The parent element for visuals generated by this scale.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeScale.Map(System.Double)">
            <summary>
            Returns the angle at which the given value should be located on this scale.
            </summary>
            <param name="value">The value under observation.</param>
            <returns>The angle at which the given value should be located on this scale.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeScale.MapInverse(System.Windows.Point)">
            <summary>
            Returns the numeric value associated with a point on this scale.
            </summary>
            <param name="point">The point under observation.</param>
            <returns>The numeric value associated with the given point on this scale.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeScale.MapInverse(System.Double)">
            <summary>
            Returns the numeric value associated with an angle on this scale.
            </summary>
            <param name="angle">The angle under observation.</param>
            <returns>The numeric value associated with the given angle on this scale.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeScaleElement">
            <summary>
            Base class for elements on a radial gauge scale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScaleElement.Scale">
            <summary>
            The scale upon which this element appears.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeScaleElement.ZIndexProperty">
            <summary>
            Identifies the ZIndex dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeScaleElement.ZIndex">
            <summary>
            A number indicating the closeness of the element to the viewer's perspective.  Higher numbers mean closer to the viewer.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeTickMark">
            <summary>
            Represents a single tickmark on a radial gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeTickMark.#ctor">
            <summary>
            RadialGaugeTickMark constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup">
            <summary>
            Represents a group of tickmarks on a radial gauge.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.#ctor">
            <summary>
            RadialGaugeTickMarkGroup constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked when a property is changed.  This method will raise the PropertyChanged event.
            </summary>
            <param name="e">The PropertyChangedEventArgs in context.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.PropertyChanged">
            <summary>
            Occurs when a property value changes. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.StartExtentProperty">
            <summary>
            Identifies the StartExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.StartExtent">
            <summary>
            Start location of tickmarks in this group, relative to the center and surface of the circular gauge bounds, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.EndExtentProperty">
            <summary>
            Identifies the EndExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.EndExtent">
            <summary>
            End location of tickmarks in this group, relative to the center and surface of the circular gauge bounds, expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.Interval">
            <summary>
            Numeric frequency at which to print tickmarks in this group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.Stroke">
            <summary>
            Stroke brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.PostInitialProperty">
            <summary>
            Identifies the PostInitial dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.PostInitial">
            <summary>
            Numeric value to start adding tickmarks, added to the scale's StartValue.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.PreTerminalProperty">
            <summary>
            Identifies the PreTerminal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.PreTerminal">
            <summary>
            Numeric value to stop adding tickmarks, subtracted from the scale's EndValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.OnApplyTemplate">
            <summary>
            Overridden to store the RootElement ContentPresenter and populate it with tickmarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.Invalidate">
            <summary>
            Forces a complete redraw of elements in this TickMarkGroup.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.TickMarkStyleProperty">
            <summary>
            Identifies the TickMarkStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.TickMarkStyle">
            <summary>
            Style applied to each TickMark object created by this TickMarkGroup.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.InverseBrushRotationProperty">
            <summary>
            Identifies the InverseBrushRotation dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialGaugeTickMarkGroup.InverseBrushRotation">
            <summary>
            Whether or not to apply a RotateTransform inverse from the needle's current rotation.  This is useful when using a gradient brush to simulate a light source on the gauge.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialLabelOrientation">
            <summary>
            Enumeration for different orientations of labels in a radial gauge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialLabelOrientation.Horizontal">
            <summary>
            Orient all labels horizontally and facing upward.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialLabelOrientation.Angular">
            <summary>
            Orient labels using the current angle on the radial gauge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialLabelOrientation.Outward">
            <summary>
            Orient labels using an angle perpendicular to the current angle on the radial gauge.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamRadialGauge">
            <summary>
            The Infragistics radial gauge control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.#ctor">
            <summary>
            XamRadialGauge constructor.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamRadialGauge.LabelAdding">
            <summary>
            Event raised whenever a label is added to this gauge.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamRadialGauge.Scales">
            <summary>
            Collection of RadialGaugeScales within this gauge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamRadialGauge.ScalesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamRadialGauge.Scales"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.OnApplyTemplate">
            <summary>
            Method overridden to store the RootElement ContentPresenter from the ControlTemplate, so it can be populated with visuals created by the gauge control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.ArrangeOverride(System.Windows.Size)">
            <summary>
            Method overridden to constrain the gauge to square bounds.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used. </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.MeasureOverride(System.Windows.Size)">
            <summary>
            Method overridden to constrain the gauge to square bounds.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamRadialGauge.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamRadialGauge.ForegroundProxyProperty">
            <summary>
            Identifies the ForegroundProxy dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamRadialGauge.ForegroundProxy">
            <summary>
            The center location of each label on the scale, relative to the center and surface of a circle inscribed in the gauge bounds; expressed as a value between 0 and 1.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TickMark">
            <summary>
            Class representing a single tickmark.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TickMark.#ctor">
            <summary>
            TickMark constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TickMark.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickMark.Stroke">
            <summary>
            Stroke brush.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ValueChangedEventArgs">
            <summary>
            Provides data for the ValueChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueChangedEventArgs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ValueChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueChangedEventArgs.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
    </members>
</doc>
